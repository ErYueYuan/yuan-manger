<template>
    <div class="bg7">
        <div class="fun-top-panel bg-my  ">
            <span class="mess-back " @click="goBack()"><div class="cont-wh"></div></span>
            <span class="title c7 f4 dblock2 t-center ">个人信息</span>
        </div>

        <div class="main-container mar1  clearfix">
            <top-panel :customerid="customerid"></top-panel>

            <div class="posi2 mar3-5 bg7  bg7 b-radius1">
            <section class=" pad1-3  ">
                    <div id="proNav" class="swiper-container border-b1">
                        <div class="swiper-wrapper f-flex" style="overflow-x: scroll;">

                            <van-tabs title-active-color="#ee0a24" @click="handleClickTag" v-model="active">
                                <van-tab
                                    :scrollspy="true"
                                    v-for="(item, index) in tabList"
                                    :key="index"
                                    :title="item.tagName">
                                </van-tab>
                            </van-tabs>

                        </div>
                    </div>

                    <!-- 订单 -->
                    <div>
                        <section class="mar3-2">
                            <div class="b-sh1  pad5-5 bg7  mar7-3" v-for="(item, index) in funOrderList" :key="index">
                                <section class="mar20 bg7 ">
                                    <div class="order-box-2020 " @click="orderDetail(item.ordersn)">
                                        <h3 class="  order-tit posi2 f3 c3">
                                            <div class="col-9 pad0 tit mess">华夏华夏红（钻石版）年金保险</div>
                                            <span class="status f1 ts3">{{orderStatusName}}</span>
                                            <span class="status f1 ts4" >客户录入单</span>
                                            <div class="col-12 f2 c4 t-left time">创建时间：{{item.createdate}}</div>
                                        </h3>
                                        <div class="order-box  clearfix posi2">
                                            <section class="f2 pad0" >
                                                <p class="order-info"><span class="p-tit">订单号</span><span class="c4">{{item.ordersn}}</span></p>
                                                <p><span class="p-tit">投保人</span><span class="c4">{{item.policyholder}}</span></p>
                                                <p><span class="p-tit">保费</span><span class="c4">{{item.totalAmount}}</span> </p>
                                                <p class="order-memo clearfix border-t2"><span class="p-tit f-left">备注</span><span class="c222 mess5 memo"></span></p>
                                            </section>
                                        </div>
                                    </div>
                                    <div class="t-right  posi2 bg7">
                                        <!-- <button class="f-left btn sxt-btn-3 showMoreBtn" title="展开剩余菜单" @click="openMenu()"></button>
                                        <div class="sl-other-b " v-show="isMenu">
                                            <b class="sl-trangle"></b>
                                            <span>写备忘</span>
                                        </div> -->
                                        <button class=" ek-btn-3 f1" style="margin-right: 10px;" @click="goOrderLog(item.ordersn)">订单轨迹</button>
                                        <!-- <button class=" ek-btn-4 f1" v-show="!enterStatusList[index]" @click="helpEntry(index)">协助录单</button>
                                        <button class=" ek-btn-3 f1" v-show="enterStatusList[index]" @click="cancelHelp(index)" style="margin-right: 10px;">取消录入</button>
                                        <button class=" ek-btn-4 f1" v-show="enterStatusList[index]" @click="toHelpEntry(item.ordersn)">继续录入</button> -->
                                    </div>
                                </section>
                                <van-empty v-show="total===0" description="暂无订单" />
                            </div>
                            <div class="f2 pad888" v-if="funOrderList.length>=total && funOrderList.length>0">
                                <div class="lzg-h-more posi2 t-center">
                                    <span class="c5 bg7 posi2 c222">没有更多啦</span>
                                </div>
                            </div>
                        </section>
                    </div>

                </section>
            </div>
        </div>

        <footer-panel :customerid="customerid" ></footer-panel>
    </div>
</template>
<script>
    import Vue from 'vue'
    import { mapGetters } from 'vuex'
    import * as tool from '@/common/Tool'
    import { api_sell } from '@/api/index'
    import DataSource from '@/common/DataSource'
    import '@vant/touch-emulator'
    import { Popup, Picker, Tab, Tabs, Empty } from 'vant'
    import * as scroll from '@/common/Scroll'
    import { CustomerTopPanel } from '@/components/index'
    import { CustomerFooterPanel } from '@/components/index'

    Vue.use(Popup)
    Vue.use(Picker)
    Vue.use(Tab)
    Vue.use(Tabs)
    Vue.use(Empty)

    export default {
        name: "orderList",
        data () {
            return {
                clientId: this.$route.params.q,//客户id
                clientNewId: this.$route.params.r,
                nikeName: "",
                sex: "",//1男，0女，2未知
                getSource: "",
                customerStar: "",
                cerCode: "",
                customerDetail: [],
                familyList: [],//家庭成员列表
                relation: 0,//家庭成员列表初始化展示项
                relationFlag: "01",
                otherInfo: true,
                funProductTagDTOList: [],//已购产品标签列表
                funProductDTOList: [],//已购产品列表
                productTag: 'B',//已购产品标签初始化展示项,B:寿险产品E:互助产品:F:理财产品
                funFollowUpDTOList: [],//跟进列表
                portraitTagsName: [],//客户画像里的标签
                portraitSex: "",
                portraitAge: "",
                addFriendsTime: "",
                interactNum: "",
                visitTime: "",
                funVisitTrailDTO: [],
                tabList: [
                    {
                        id: '0',
                        innerCode: '0',
                        tagName: '基本信息'
                    },
                    {
                        id: '1',
                        innerCode: '1',
                        tagName: '订单'
                    },
                    {
                        id: '2',
                        innerCode: '2',
                        tagName: '轨迹'
                    },
                    {
                        id: '3',
                        innerCode: '3',
                        tagName: '跟进'
                    },
                    {
                        id: '4',
                        innerCode: '4',
                        tagName: '历史方案'
                    },
                    {
                        id: '5',
                        innerCode: '5',
                        tagName: '已购产品'
                    }
                ],
                tagIndex: '0',
                active: 1,
                isMenu: false,
                funOrderList: [],
                orderStatusName: "",
                enterStatusList: [], // 存放录入按钮显示状态值
                ciOrderLogList: [],//存放订单轨迹状态
                total: 0,
                isLoad: true,
                allLoaded: false,
                queryLoading: true,
                offset: 0,
                limit: 10,
                customerid: this.$route.params.r,
            }
        },
        computed: {
            ...mapGetters(['user']),
        },
        components: {
            'top-panel': CustomerTopPanel,
            'footer-panel': CustomerFooterPanel,
        },
        created () {
            this.orderList();//订单列表查询
            // this.queryOrderStatus();//订单状态查询
        },
        mounted () {
            window.addEventListener('scroll', this.handleScroll)
        },
        methods: {
            handleScroll() {
                if (scroll.getScrollTop() + scroll.getClientHeight() > (scroll.getScrollHeight() - 5)) {
                    this.loadMore();
                }
            },
            loadMore() {
                if (this.queryLoading) {
                    return
                }
                if (!this.isLoad) {
                    this.isLoad = true;
                    this.offset += 10;
                    this.orderList();
                }
            },

            handleClickTag (index, title) {
                this.tagIndex = this.tabList[index].innerCode;
                this.offset = 0;
                if (this.tagIndex == '0') {
                    this.$router.push({ name: 'customerDetail',params: {
                        q: this.clientId,
                        r: this.clientNewId
                    } })
                } else if (this.tagIndex == '2') {
                    this.$router.push({ name: 'trailList',params: {
                        q: this.clientId,
                        r: this.clientNewId
                    } })
                } else if (this.tagIndex == '3') {
                    this.$router.push({ name: 'followList',params: {
                        q: this.clientId,
                        r: this.clientNewId
                    } })
                } else if (this.tagIndex == '4') {
                    this.$router.push({ name: 'historyList',params: {
                        q: this.clientId,
                        r: this.clientNewId
                    } })
                } else if (this.tagIndex == '5') {
                    this.$router.push({ name: 'payProductList',params: {
                        q: this.clientId,
                        r: this.clientNewId
                    } })
                }
            },

            orderList () {
                const _data = {
                    saasId: tool.app.saasId,
                    userId: this.user.userInfo.userId,
                    agentCode: this.user.userInfo.agentcode,
                    offset: this.offset,
                    limit: this.limit
                }
                api_sell.orderList(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.isLoad = false;
                        this.total = data.total;
                        // this.funOrderList = data.funOrderList;
                        for (let it of this.funOrderList) {
                            this.enterStatusList.push(false)
                        }
                        this.queryOrderStatus();
                        if (this.offset === 0 || this.funOrderList.length === 0) {
                            this.funOrderList = data.funOrderList ? data.funOrderList : []
                            if (this.funOrderList.length < this.total) {
                                this.queryLoading = false;
                            }
                        } else {
                            this.funOrderList = this.funOrderList.concat(data.funOrderList);
                        }
                        this.allLoaded = this.funOrderList.length >= this.total;
                        if (this.allLoaded) {
                            this.queryLoading = true;
                        }
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            queryOrderStatus () {
                const _data = {type: 'fun_order_status/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        data.params.dicts.forEach(item=>{
                            this.funOrderList.forEach(item2 => {
                                if (item.value == item2.orderStatus) {
                                    this.orderStatusName = item.name;
                                }
                            })
                        })
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            orderDetail (ordersn) {
                this.$router.push({ name: 'wdetails',params: {
                    q: ordersn
                } })
            },

            goOrderLog (ordersn) {
                this.$router.push({ name: 'orderLogList',params: {
                    q: ordersn
                } })
            },

            helpEntry (ind) {
                this.$set(this.enterStatusList, ind, true)
            },

            cancelHelp (ind) {
                this.$set(this.enterStatusList, ind, false)
            },

            toHelpEntry (ordersn) {
                // 到可回溯的协助录单页
            },

            openMenu () {
                this.isMenu = !this.isMenu;
            },

            toTrail () {
                this.$router.push({ name: 'trailList',params: {
                    q: this.clientId,
                    r: this.clientNewId
                } })
            },

            addRecord () {
                this.$router.push({ name: 'followRecord',params: {
                    p: this.clientId,
                    q: this.clientNewId,
                    r: 'add'
                } })
            },

            goBack () {
                this.$router.push({ name: 'sellList',params: {
                    q: '1'
                } })
            },


        },
        destroyed() {
            window.removeEventListener('scroll', this.handleScroll)
        },
    }
</script>
<style scoped>

</style>
