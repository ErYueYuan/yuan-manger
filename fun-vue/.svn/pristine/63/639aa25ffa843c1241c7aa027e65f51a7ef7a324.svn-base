<template>
  <div class="bg3">
    <div class="fun-top-panel bg7  ">
      <span class="mess-back " @click="goBack"><div class="cont"></div></span>
      <div class="sear-bb ">
        <div class=" clearfix">
          <section>
            <form action="/">
              <van-search
                shape="round"
                v-model="searchText"
                placeholder="请输入搜索关键词"
                @search="handleSearch"
                @clear="handleClear"
              />
            </form>
            <!--<form action="" class="input-search-form" id="search_from"  >-->
              <!--<input type="search"  input autocomplete="off" placeholder="输入关键字搜索" v-model="searchText" class="f2 " ref="searchFuc">-->
            <!--</form>-->
            <!--<button class="sea-btn" @click="searchFuc"><span class="gg-search" ></span></button>-->
          </section>
        </div>
      </div>
    </div>
    <section class="row bg7 nav-bar2 mar1">
      <div class="col-12">
        <van-tabs title-active-color="#ee0a24" @click="handleClickTag">
          <van-tab
            :scrollspy="true"
            v-for="(article, index) in tagList"
            :title="article.tagName"></van-tab>
        </van-tabs>
      </div>
      <div class="col-2 pad0 c2 all-sear"><span class="t-left c-p"><b title="搜索"></b></span></div>
    </section>
    <div class="pd10 mar4-1  clearfix" :class="total===0?'':'main-container'">
      <section class="bg7 pad6 b-radius1 mar3-2" >
        <section class="blk-cont2020  ">
          <ul class="cont-blk  icon-wrap ">
            <li class="li-p2  posi2 clearfix" v-for="(item, index) in productList" :key="index" @click="goProductDetail(item)">
            <div class="product2020 f-left posi2">
              <img class="lazy-p" src="https://www.baoxian.com/product_file/ERiskPic/100901007.jpg" alt="pic">
              <span class="state"><i class="t1"></i>网销</span>
            </div>
            <div class="info-blk  ">
              <h3 class=" mess f3 c44 ">{{item.productName}}</h3>
              <p class="f1  mar444 mess" v-if="item.feature">{{item.feature}}</p>
              <div class="t-left mar444">
                <span class="type2020 ts" v-if="item.tags.indexOf('recommend') !== -1">推荐</span>
                <span class="type2020 hot" v-if="item.tags.indexOf('hot') !== -1">热销</span>
              </div>
              <div class="f2-1 c9 sub-info clearfix">
                <span>{{item.prem + '￥起'}}</span>
              </div>
            </div>
          </li>
          <!--<li class="li-p2  posi2 clearfix">-->
            <!--<div class="product2020 f-left posi2">-->
              <!--<img class="lazy-p" src="https://www.baoxian.com/product_file/ERiskPic/100901007.jpg" alt="pic">-->
              <!--<span class="state"><i class="t2"></i>中介</span>-->
            <!--</div>-->
            <!--<div class="info-blk  ">-->
              <!--<h3 class=" mess f3 c44 ">信泰如意尊终身寿险</h3>-->
              <!--<p class="f1  mar444 mess">锁定利率，高额航空意外，定向传承</p>-->
              <!--<div class="t-left mar444">-->
                <!--<span class="type2020 ts">推荐</span>-->
                <!--<span class="type2020 hot">热销</span>-->
              <!--</div>-->
              <!--<div class="f2-1 c9 sub-info clearfix">-->
                <!--<span>5000￥起</span>-->
              <!--</div>-->

            <!--</div>-->
          <!--</li>-->
          </ul>
        </section>
        <van-empty v-show="total===0" description="暂无产品" />
      </section>
      <div class="f2 pad888" v-if="productList.length>=total && productList.length>0">
        <div class="lzg-h-more posi2 t-center">
          <span class="c5 bg8 posi2 c222">没有更多啦</span>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
  import Vue from 'vue'
  import { Search, Tab, Tabs, Empty } from 'vant'
  import { mapGetters } from 'vuex'
  import * as tool from '@/common/Tool'
  import { api_product } from '@/api/index'
  import * as scroll from '@/common/Scroll'
  import 'swiper/css/swiper.min.css'

  Vue.use(Search)
  Vue.use(Tab)
  Vue.use(Tabs)
  Vue.use(Empty)

  export default {
    name: "ProductList",
    data () {
      return {
        tagList: [{ id: '0', innerCode: '0', tagName: '全部' }],
        tagIndex: '0',
        searchText: '',
        productList: [],
        total: 0,
        isLoad: true,
        allLoaded: false,
        queryLoading: true,
        offset: 0,
        limit: 10,
      }
    },
    computed: {
      ...mapGetters(['user']),
    },
    beforeCreate: function() {
      document.getElementsByTagName("body")[0].className = "bg3";
    },
    created () {
      if (this.user && this.user.userInfo && this.user.userInfo.status && this.user.userInfo.status === 2) {
        this.getProductTags()
        this.getProductList()
      } else {
        this.getVisitorProductList()
      }
    },
    mounted () {
      window.addEventListener('scroll', this.handleScroll)
    },
    methods: {
      getProductTags () {
        const _data = {
          saasId: tool.app.saasId,
          tagType: 'filter',
          dataStructure: 'tree'
        }
        api_product.productTag(_data).then(data => {
          if (data.status === tool.rtCode.status) {
            this.tagList = this.tagList.concat(data.productTagList)
          } else {
            tool.toastMessage(data.message, 'error')
          }
        })
      },
      goProductDetail (it) {
        window.location.href = 'http://lzgplus.cisg.cn/lzgChannelInsure/#/briskInfo/' + it.productCode
      },
      loadMore() {
        if (this.queryLoading) {
          return
        }
        if (!this.isLoad) {
          this.isLoad = true
          this.offset += 10
          this.getProductList()
        }
      },
      getProductList () {
        const _data = {
          saasId: tool.app.saasId,
          mainRiskFlag: '1',
          channelDeptCode: '1000091',
          tagInnerCodes: this.tagIndex && this.tagIndex != '0' ? new Array(this.tagIndex) : [],
          params: {
            offset: this.offset,
            limit: this.limit
          },
          search: this.searchText
        }
        api_product.productList(_data).then(data => {
          if (data.status === tool.rtCode.status) {
            this.isLoad = false
            this.total = data.total
            if (this.offset === 0 || this.productList.length === 0) {
              this.productList = data.productList ? data.productList : []
              if (this.productList.length < this.total) {
                this.queryLoading = false
              }
            } else {
              this.productList = this.productList.concat(data.productList)
            }
            this.allLoaded = this.productList.length >= this.total
            if (this.allLoaded) {
              this.queryLoading = true
            }
          } else {
            tool.toastMessage(data.message, 'error')
          }
        })
      },
      getVisitorProductList () {
        const _data = {
          saasId: tool.app.saasId,
          platformId: tool.app.platformId,
          params: {
            offset: this.offset,
            limit: this.limit
          },
          search: this.searchText
        }
        api_product.visitorProductList(_data).then(data => {
          if (data.status === tool.rtCode.status) {
            this.isLoad = false
            this.total = data.total
            if (this.offset === 0 || this.productList.length === 0) {
              this.productList = data.productList ? data.productList : []
              if (this.productList.length < this.total) {
                this.queryLoading = false
              }
            } else {
              this.productList = this.productList.concat(data.productList)
            }
            this.allLoaded = this.productList.length >= this.total
            if (this.allLoaded) {
              this.queryLoading = true
            }
          } else {
            tool.toastMessage(data.message, 'error')
          }
        })
      },
      handleSearch () {
        if (this.user && this.user.userInfo && this.user.userInfo.status && this.user.userInfo.status === 2) {
          this.getProductList()
        } else {
          this.getVisitorProductList()
        }
      },
      handleClear () {
        if (this.user && this.user.userInfo && this.user.userInfo.status && this.user.userInfo.status === 2) {
          this.getProductList()
        } else {
          this.getVisitorProductList()
        }
      },
      handleScroll() {
        if (scroll.getScrollTop() + scroll.getClientHeight() > (scroll.getScrollHeight() - 5)) {
          this.loadMore()
        }
      },
      handleClickTag (index, title) {
        if (this.tagIndex !== this.tagList[index].innerCode) {
          this.tagIndex = this.tagList[index].innerCode
          this.offset = 0
          this.getProductList()
        }
      },
      goBack () {
        this.$router.go(-1)
      }
    },
    beforeDestroy: function() {
      document.body.removeAttribute("class", "bg3")
    },
    destroyed() {
      window.removeEventListener('scroll', this.handleScroll)
    }
  }
</script>

<style scoped>

</style>
