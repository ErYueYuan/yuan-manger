<template>
  <div class="bg7">
    <div class="fun-top-panel bg-my  ">
      <span
        class="mess-back "
        @click="goBack()"
      >
        <div class="cont-wh"></div>
      </span>
      <span class="title c7 f4 dblock2 t-center ">个人信息</span>
    </div>

    <div class="main-container mar1  clearfix">
      <top-panel
        :customerBaseInfo="customerBaseInfo"
        :customerResultId="customerResultId"
      ></top-panel>

      <div class="posi2 mar3-5 bg7  bg7 b-radius1">
        <section class=" pad1-3  ">
          <div
            id="proNav"
            class="swiper-container border-b1"
          >
            <div
              class="swiper-wrapper f-flex"
              style="overflow-x: scroll;"
            >
              <van-tabs
                title-active-color="#ee0a24"
                v-model="active"
                @click="handleClickTag"
              >
                <van-tab
                  :scrollspy="true"
                  v-for="(article, index) in tabList"
                  :key="index"
                  :title="article.tagName"
                >
                </van-tab>
              </van-tabs>
            </div>
          </div>

          <!-- 已购产品 -->
          <div>
            <section class="row mar0 mar3">
              <div
                class="col-4 "
                :class="index != 0 ? 'pad8-1' : 'pad0'"
                v-for="(item, index) in funProductTagDTOList"
                :key="index"
                @click="chooseProductTag(item)"
              ><span
                  class="hx-bt3 bt2 f3"
                  :class="productTag == item.tagValue ? 'active' : ''"
                >{{item.tagName}}</span></div>
            </section>
            <section class="mar3-2">
              <div v-if="productTag =='B'">
                <div
                  class="b-sh1  pad5-5 bg7 mar6-2 mar7-3"
                  v-for="(item,index) in policyList"
                  :key="index"
                >
                  <section class="mar20 bg7">
                    <div class="order-box-2020 ">
                      <h3 class="  order-tit posi2 f3 c3">
                        <div class="col-9 pad0 tit mess">{{item.productName}}</div>
                        <span
                          class="status f1 ts4"
                          v-if="orderSta(item.policyStatus)!=''"
                        >{{orderSta(item.policyStatus)}}</span>
                        <div class="col-12 f2 c4 t-left time">生效日期：{{item.effectiveDate}}</div>
                      </h3>
                      <div class="order-box  clearfix posi2">
                        <section class="f2 pad0">
                          <p class="order-info"><span class="p-tit">保单号</span><span class="c4">{{item.policysn}}</span></p>
                          <p><span class="p-tit">险种</span><span class="c4">{{unfinish(item.riskType)}}</span></p>
                          <p><span class="p-tit">投保人</span><span class="c4">{{item.policyholder}}</span></p>
                          <p><span class="p-tit">被保人</span><span class="c4">{{item.recognizee}}</span></p>
                          <p><span class="p-tit">保费</span><span class="c4">{{item.originalPremium}}</span> </p>
                        </section>
                      </div>
                    </div>
                  </section>
                </div>
              </div>
              <div v-if="productTag!='B'">
                <div
                  class="b-sh1  pad1-3 bg7  mar7-3"
                  v-for="(item,index) in funProductDTOList"
                  :key="index"
                >
                  <section class="mar20 bg7">
                    <div class="order-box-2020 ">
                      <h3 class="  order-tit posi2 f3 c3">
                        <div class="col-9 pad0 tit mess">{{item.riskName}}</div>
                        <span
                          class="status f1 ts3"
                          style="display:none;"
                        >投保录入中</span>
                        <span
                          class="status f1 ts4"
                          style="display:none;"
                        >客户录入单</span>
                        <!--双录状态-->
                        <span class="status f1 ts4">{{item.state}}</span>
                        <div class="col-12 f2 c4 t-left time">生效日期：{{item.effectiveDate}}</div>
                      </h3>
                      <div class="order-box  clearfix posi2">
                        <section class="f2 pad0">
                          <p class="order-info"><span class="p-tit">保单号</span><span class="c4">{{item.contNo}}</span></p>
                          <p><span class="p-tit">险种</span><span class="c4">{{item.riskType}}</span></p>
                          <p><span class="p-tit">投保人</span><span class="c4">{{item.holderName}}</span></p>
                          <p><span class="p-tit">被保人</span><span class="c4">{{item.insureName}}</span></p>
                          <p><span class="p-tit">保费</span><span class="c4">{{item.prem}}</span> </p>
                          <p class="order-memo clearfix border-t2"><span class="p-tit f-left">备注</span><span class="c222 mess5 memo">{{item.remark}}</span></p>
                        </section>
                      </div>
                    </div>
                    <!-- <div class="t-right  pad6-1 ">
                                        <button class=" ek-btn-4 min-w f1 " >写备忘</button>
                                    </div> -->
                  </section>
                </div>
              </div>
              <van-empty
                v-show="total===0"
                description="暂无已购产品"
              />
              <div
                class="f2 pad888"
                v-if="`${productTag != 'B'?funProductDTOList:policyList}`.length>=total && `${productTag != 'B'?funProductDTOList:policyList}`.length>0"
              >
                <div class="lzg-h-more posi2 t-center">
                  <span class="c5 bg7 posi2 c222">没有更多啦</span>
                </div>
              </div>
            </section>
          </div>
        </section>
      </div>
    </div>

    <footer-panel
      :customerResultId="customerResultId"
      :customerBaseInfo="customerBaseInfo"
      :customerDetail="customerDetail"
    ></footer-panel>
  </div>
</template>
<script>
import Vue from 'vue'
import { mapGetters } from 'vuex'
import * as tool from '@/common/Tool'
import { api_sell, api_service } from '@/api/index'
import DataSource from '@/common/DataSource'
import '@vant/touch-emulator'
import { Tab, Tabs, Empty } from 'vant'
import * as scroll from '@/common/Scroll'
import { CustomerTopPanel } from '@/components/index'
import { CustomerFooterPanel } from '@/components/index'

Vue.use(Tab)
Vue.use(Tabs)
Vue.use(Empty)

export default {
  name: "payProductList",
  data() {
    return {
      customerClientId: this.$route.params.q,
      customerResultId: this.$route.params.r,
      customerBaseInfo: {},

      nikeName: "",
      sex: "",//1男，0女，2未知
      getSource: "",
      customerStar: "",
      cerCode: "",
      customerDetail: {},
      familyList: [],//家庭成员列表
      relation: 0,//家庭成员列表初始化展示项
      relationFlag: "01",
      otherInfo: true,
      funProductTagDTOList: [],//已购产品标签列表
      funProductDTOList: [],//已购产品列表
      productTag: 'B',//已购产品标签初始化展示项,B:寿险产品E:互助产品:F:理财产品
      funFollowUpDTOList: [],//跟进列表
      portraitTagsName: [],//客户画像里的标签
      portraitSex: "",
      portraitAge: "",
      addFriendsTime: "",
      interactNum: "",
      visitTime: "",
      funVisitTrailDTO: [],
      tabList: [
        {
          id: '0',
          innerCode: '0',
          tagName: '基本信息'
        },
        {
          id: '1',
          innerCode: '1',
          tagName: '订单'
        },
        {
          id: '2',
          innerCode: '2',
          tagName: '轨迹'
        },
        {
          id: '3',
          innerCode: '3',
          tagName: '跟进'
        },
        {
          id: '4',
          innerCode: '4',
          tagName: '历史方案'
        },
        {
          id: '5',
          innerCode: '5',
          tagName: '已购产品'
        }
      ],
      tagIndex: '0',
      active: 5,
      total: 0,
      isLoad: true,
      allLoaded: false,
      queryLoading: true,
      offset: 0,
      limit: 10,
      policyList: [],
      statusList: [],
      typeList: []

    }
  },
  computed: {
    ...mapGetters(['user']),
  },
  components: {
    'top-panel': CustomerTopPanel,
    'footer-panel': CustomerFooterPanel,
  },
  beforeCreate: function () {
    document.getElementsByTagName("body")[0].className = "bg3";
  },
  created() {
    this.queryBasicIntroduction();//基本介绍
    this.getProductTag();//已购产品标签查询
    this.getCustomerProduct();//已购产品查询
    this.chOrderStatus();
    this.chRiskType()
    this.plicyList();
  },
  mounted() {
    window.addEventListener('scroll', this.handleScroll)
  },
  methods: {
    handleScroll() {
      if (scroll.getScrollTop() + scroll.getClientHeight() > (scroll.getScrollHeight() - 5)) {
        this.loadMore();
      }
    },
    loadMore() {
      if (this.queryLoading) {
        return
      }
      if (!this.isLoad) {
        this.isLoad = true;
        this.offset += 10;
        this.getCustomerProduct();
        this.plicyList();
      }
    },

    handleClickTag(index, title) {
      this.tagIndex = this.tabList[index].innerCode
      this.offset = 0;
      if (this.tagIndex == '0') {
        this.$router.push({
          name: 'customerDetail', params: {
            r: this.customerResultId
          }
        })
      } else if (this.tagIndex == '1') {
        this.$router.push({
          name: 'orderList', params: {
            r: this.customerResultId
          }
        })
      } else if (this.tagIndex == '2') {
        this.$router.push({
          name: 'trailList', params: {
            r: this.customerResultId
          }
        })
      } else if (this.tagIndex == '3') {
        this.$router.push({
          name: 'followList', params: {
            r: this.customerResultId
          }
        })
      } else if (this.tagIndex == '4') {
        this.$router.push({
          name: 'historyList', params: {
            r: this.customerResultId
          }
        })
      }
    },

    queryBasicIntroduction() {
      const _data = {
        saasId: tool.app.saasId,
        clientId: this.customerClientId
      }
      api_sell.queryBasicIntroduction(_data).then(data => {
        if (data.status == tool.rtCode.status) {
          this.customerBaseInfo = data;
          this.getCustomerDetail(data.clientNewId);
          // this.nikeName = data.nikeName;
          // this.sex = data.sex;
          // this.getSource = data.getSource;
          // this.customerStar = data.customerStar;
          // this.cerCode = data.cerCode;
        } else {
          tool.toastMessage(data.message, 'error');
        }
      })
    },

    getProductTag() {
      const _data = {
        saasId: tool.app.saasId,
      }
      api_sell.getProductTag(_data).then(data => {
        if (data.status == tool.rtCode.status) {
          this.funProductTagDTOList = data.funProductTagDTOList;
        } else {
          tool.toastMessage(data.message, 'error');
        }
      })
    },

    getCustomerDetail(clientNewId) {
      const _data = {
        saasId: tool.app.saasId,
        clientNewId: clientNewId
      }
      api_sell.getCustomerDetail(_data).then(data => {
        if (data.status == tool.rtCode.status) {
          this.customerDetail = data.customerDetail;
        } else {
          tool.toastMessage(data.message, 'error');
        }
      })
    },

    chooseProductTag(item) {
      this.offset = 0;
      this.productTag = item.tagValue;
      if (item.tagValue == 'B') {
        this.plicyList();
      } else {
        this.getCustomerProduct(item.tagValue);
      }
    },
    getCustomerProduct(value) {
      const _data = {
        name: this.customerBaseInfo.nikeName,
        saasId: tool.app.saasId,
        idNo: this.customerBaseInfo.cerCode,
        riskType: value ? value : this.productTag
        // name: "汝振鑫",
        // saasId: tool.app.saasId,
        // idNo: "230506199407230019",
        // riskType: "1"
      }
      api_sell.getCustomerProduct(_data).then(data => {
        if (data.status == tool.rtCode.status) {
          this.isLoad = false;
          this.total = data.total;
          // this.funProductDTOList = data.funProductDTOList;
          if (this.offset === 0 || this.funProductDTOList.length === 0) {
            this.funProductDTOList = data.funProductDTOList ? data.funProductDTOList : []
            if (this.funProductDTOList.length < this.total) {
              this.queryLoading = false;
            }
          } else {
            this.funProductDTOList = this.funProductDTOList.concat(data.funProductDTOList);
          }
          this.allLoaded = this.funProductDTOList.length >= this.total;
          if (this.allLoaded) {
            this.queryLoading = true;
          }
        } else {
          tool.toastMessage(data.message, 'error');
        }
      })
    },
    plicyList() {
      let _data = {
        saasId: this.user.userInfo.saasId,
        userId: this.user.userInfo.userId,
        offset: this.offset,
        limit: this.limit,
        agentCode: this.user.userInfo.agentcode,
        type: '1',
      }
      api_service.orderList(_data).then(res => {
        if (res.status == tool.rtCode.status) {
          this.isLoad = false
          this.total = res.total
          if (this.offset === 0 || this.policyList.length === 0) {
            this.policyList = res.funOrderList ? res.funOrderList : []
            if (this.policyList.length < this.total) {
              this.queryLoading = false
            }
          } else {
            this.policyList = this.policyList.concat(res.funOrderList)
          }
          this.allLoaded = this.policyList.length >= this.total
          if (this.allLoaded) {
            this.queryLoading = true
          }
        } else {
          tool.toastMessage(res.message, 'error')
        }
      })
    },
    goBack() {
      this.$router.push({
        name: 'sellList', params: {
          q: "1"
        }
      })
    },
    chOrderStatus() {
      const _data = { type: `fun_policy_status/` + tool.app.platformCode + '/' + tool.app.saasId }
      api_sell.sysDict(_data).then(data => {
        this.statusList = data.params.dicts;
      })
    },
    chRiskType() {
      api_service.chRiskType().then(data => {
        this.typeList = data
      })
    },
    orderSta(val) {
      let StatusName = '';
      this.statusList.forEach(item => {
        if (item.value == val) {
          StatusName = item.name;
        }
      })
      return StatusName
    },
    unfinish(val) {
      let unfinish = '';
      this.typeList.forEach(item => {
        if (item.value == val) {
          unfinish = item.name
        }
      })
      return unfinish
    }
  },
  beforeDestroy: function () {
    document.body.removeAttribute("class", "bg3");
  },
}
</script>
<style scoped>
</style>
