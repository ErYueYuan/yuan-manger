<template>
    <div>
        <div class="fun-top-panel  bg7 ">
            <span class="mess-back " @click="goBack()"><div class="cont"></div></span>
            <span class="title c6 f4 dblock2 t-center ">编辑信息</span>
        </div>

        <div class="main-container mar1  clearfix">
            <div class=" mar3-5 ">
                <section class=" pad1-3  ">
                    <section class="mar3-6 bg7  b-sh1">
                        <section class="pad1">
                            <dl class="per-box bg7 border-b1">
                                <dt class="c6 f3-1">姓名<span class="c8" v-if="editSource == '3'">&nbsp;*</span></dt>
                                <dd class="t-right f3  ">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请输入姓名" v-model="customerDetail.cname">
                                </dd>
                            </dl>
                            <dl class="per-box bg7 border-b1">
                                <dt class="c6 f3-1">手机号<span class="c8" v-if="editSource == '3'">&nbsp;*</span></dt>
                                <dd class="t-right f3  ">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请输入手机号" v-model="customerDetail.mobile">
                                </dd>
                            </dl>
                            <dl class="per-box bg7 border-b1" @click="showPopup('sex')">
                                <dt class="c6 f3-1">性别</dt>
                                <dd class="t-right f3  arrow">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.sexName" >
                                </dd>
                            </dl>
                        </section>
                    </section>

                     <!-- 出生日期 -->
                    <section class="mar3-6 bg7  b-sh1">
                        <section class="pad1">
                            <dl class="per-box bg7 border-b1" @click="showDate('birthday')">
                                <dt class="c6 f3-1">出生日期</dt>
                                <dd class="t-right f3  arrow">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.birthday">
                                </dd>
                            </dl>
                            <dl class="per-box bg7 border-b1">
                                <dt class="c6 f3-1">年龄</dt>
                                <dd class="t-right f3 c5">{{customerDetail.age}}</dd>
                            </dl>
                            <dl class="per-box bg7 border-b1" @click="showPopup('country')">
                                <dt class="c6 f3-1">国籍</dt>
                                <dd class="t-right f3  arrow">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.nationalityName" >
                                </dd>
                            </dl>
                            <dl class="per-box bg7" @click="showPopup('marry')">
                                <dt class="c6 f3-1">婚姻</dt>
                                <dd class="t-right f3  arrow">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.marriageName" >
                                </dd>
                            </dl>
                        </section>
                    </section>
                    <!-- 证件类型 -->
                    <section class="mar3-6 bg7  b-sh1">
                        <section class="pad1">
                            <dl class="per-box bg7 border-b1" @click="showPopup('cerType')">
                                <dt class="c6 f3-1">证件类型</dt>
                                <dd class="t-right f3  arrow">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.cerTypeName">
                                </dd>
                            </dl>
                            <dl class="per-box bg7 border-b1" v-if="customerDetail.cerType == '01'" @click="showPopup('cerValidDateType')">
                                <dt class="c6 f3-1">证件有效期</dt>
                                <dd class="t-right f3  arrow">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.cerValidDateTypeName">
                                </dd>
                            </dl>
                            <dl class="per-box bg7 border-b1" @click="showDate('endDate')" v-if="customerDetail.cerType == '01' && customerDetail.cerValidDateType == '1'"><!-- v-show="isLong" -->
                                <dt class="c6 f3-1" style="width:auto;">证件有效期止期</dt>
                                <dd class="t-right f3  arrow" style="margin-left: 125px;">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.cerValidDate" >
                                </dd>
                            </dl>
                            <dl class="per-box bg7">
                                <dt class="c6 f3-1">证件号码</dt>
                                <dd class="t-right f3  ">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请输入证件号码" v-model="customerDetail.cerCode">
                                </dd>
                            </dl>
                        </section>
                    </section>
                    <!-- 行业 -->
                    <section class="mar3-6 bg7  b-sh1">
                        <section class="pad1">
                            <dl class="per-box bg7 border-b1" @click="showPopup('occup')">
                                <dt class="c6 f3-1">行业</dt>
                                <dd class="t-right f3  arrow">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.occupname">
                                </dd>
                            </dl>
                            <dl class="per-box bg7 border-b1" @click="showPopup('occupxtion')">
                                <dt class="c6 f3-1">职业</dt>
                                <dd class="t-right f3  arrow">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.occupxtionname">
                                </dd>
                            </dl>
                            <dl class="per-box bg7 border-b1">
                                <dt class="c6 f3-1">公司名称</dt>
                                <dd class="t-right f3  ">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请输入公司名称" v-model="customerDetail.companyName">
                                </dd>
                            </dl>
                            <dl class="per-box bg7 border-b1">
                                <dt class="c6 f3-1">电子邮箱</dt>
                                <dd class="t-right f3  ">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请输入电子邮箱" v-model="customerDetail.email">
                                </dd>
                            </dl>
                            <dl class="per-box bg7 border-b1" @click="showPopup('tax')">
                                <dt class="c6 f3-1">税收居民</dt>
                                <dd class="t-right f3  arrow">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.taxFlagName">
                                </dd>
                            </dl>
                        </section>
                    </section>
                     <!-- 常住城市 -->
                    <section class="mar3-6 bg7  b-sh1">
                        <section class="pad1">
                            <dl class="per-box pb2 bg7 border-b1">
                                <dt class="c6 f3-1">常住城市</dt>
                                <dd class="t-right f3 c5 arrow" @click="handleClickProvinceCity('live')">{{customerDetail.provinceName}} - {{customerDetail.cityName}}</dd>
                            </dl>
                            <dl class="per-box line2 bg7 border-b1">
                                <dt class="c6 f3-1">详细地址</dt>
                                <dd class="t-right f3  ">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请输入详细地址" v-model="customerDetail.address">
                                </dd>
                            </dl>
                            <dl class="per-box bg7">
                                <dt class="c6 f3-1">邮政编码</dt>
                                <dd class="t-right f3  ">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请输入邮政编码" v-model="customerDetail.postalcode">
                                </dd>
                            </dl>
                        </section>
                    </section>
                     <!-- 家庭地址城市 -->
                    <section class="mar3-6 bg7  b-sh1">
                        <section class="pad1">
                            <dl class="per-box pb2 bg7 border-b1">
                                <dt class="c6 f3-1">家庭地址城市</dt>
                                <dd class="t-right f3 c5 arrow" @click="handleClickProvinceCity('town')">{{customerDetail.homeProvinceName}} - {{customerDetail.homeCityName}}</dd>
                            </dl>
                            <dl class="per-box line2 bg7 border-b1">
                                <dt class="c6 f3-1">家庭详细地址</dt>
                                <dd class="t-right f3  ">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请输入详细地址" v-model="customerDetail.homeAddress">
                                </dd>
                            </dl>
                            <dl class="per-box bg7">
                                <dt class="c6 f3-1">邮政编码</dt>
                                <dd class="t-right f3  ">
                                    <input type="text" class="ed-input form-control h44 t-right" placeholder="请输入邮政编码" v-model="customerDetail.homePostalcode">
                                </dd>
                            </dl>
                        </section>
                    </section><br>

                </section>
            </div>
        </div>
        <div class="posi5 pad5-8 bg7" @click="saveUpdateInfo()">
            <button type="button" class="hx-bt3 t-center">保存</button>
        </div>


        <province-city @provinceCityData="provinceCityDataFun"
                       :provinceCityIndex="provinceCityIndex"
                       v-if="provinceCityStatus"></province-city>


        <van-popup v-model="isShow" round position="bottom" :style="{height: '50%'}">
            <van-picker
                show-toolbar
                :value-key="contentValueKey"
                :columns="popList"
                @cancel="isShow = false"
                @confirm="selectContent"
                :style="{width: '100%'}"
                :title="popTitle"
            />
        </van-popup>


        <van-popup
            v-model="currentDateShow"
            position="bottom"
            :style="{height:'50%'}"
        >
            <van-datetime-picker
                @confirm="confirm"
                @cancel="currentDateShow = false"
                v-model="currentDate"
                type="date"
                title="出生日期"
                :formatter="formatter"
                :min-date="minDate"
                :max-date="maxDate"
            />
        </van-popup>

        <van-popup
            v-model="endDateShow"
            position="bottom"
            :style="{height:'50%'}"
        >
            <van-datetime-picker
                @confirm="confirm"
                @cancel="endDateShow = false"
                v-model="currentDate"
                type="date"
                title="证件有效期止期"
                :formatter="formatter"
                :min-date="endMinDate"
                :max-date="endMaxDate"
            />
        </van-popup>
    </div>
</template>
<script>
    import Vue from 'vue'
    import { mapGetters } from 'vuex'
    import * as tool from '@/common/Tool'
    import { api_sell } from '@/api/index'
    import { ProvinceCity } from '@/components/index'
    import DataSource from '@/common/DataSource'
    import '@vant/touch-emulator'
    import { Popup, DatetimePicker, Picker } from 'vant'
    import Vd from '@/common/Validator'

    Vue.use(Popup)
    Vue.use(DatetimePicker)
    Vue.use(Picker)

    export default {
        name: "editCustomerDetail",
        data () {
            return {
                clid: this.$route.params.q,
                resultId: this.$route.params.r,
                editSource: this.$route.params.s,//1-公众号，3-自建
                clientNewId: this.$route.params.t,
                isShow: false,//选择弹框
                contentValueKey: 'name',
                popList: [],
                popTitle: '请选择',
                customerDetail: [],
                allList: [],
                sexList: [],
                countryList: [],
                marryList: [],
                idtypeList: [],
                occupList: [],//一类职业
                occupxtionList: [],//三类职业
                taxList: [],
                cerValidDateTypeList: [
                    {
                        name: "长期",
                        value: "0",
                        type: "dateType"
                    },
                    {
                        name: "非长期",
                        value: "1",
                        type: "dateType"
                    }
                ],
                listType: "",
                minDate: new Date(1870, 0, 1),
                maxDate: new Date(),
                currentDate: new Date(),
                endMinDate: new Date(1870, 0, 1),
                endMaxDate: new Date(2170, 0, 1),
                currentDateShow: false,
                endDateShow: false,
                confirmType: "",
                isLong: false,
                provinceCityIndex: '',
                provinceCityStatus: false,
            }
        },
        computed: {
            ...mapGetters(['user']),
        },
        components: {
            'province-city': ProvinceCity
        },
        beforeCreate: function() {
            document.getElementsByTagName("body")[0].className = "bg7";
        },
        created () {
            this.getCustomerDetail();
            this.querySex();//性别
            this.queryCountry();//国籍
            this.queryMarriage();//婚姻
            this.queryIdtype();//证件类型
            this.queryOccup();//行业（一类）
            this.queryTax();//税收居民
        },
        methods: {

            getCustomerDetail () {
                const _data = {
                    agentCode: this.user.userInfo.agentcode,
                    saasId: tool.app.saasId,
                    clientNewId: this.clientNewId
                }
                api_sell.getCustomerDetail(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.customerDetail = data.customerDetail;
                        if (data.customerDetail.sex == "0") {
                            this.customerDetail.sexName = '女';
                        } else if (data.customerDetail.sex == "1") {
                            this.customerDetail.sexName = '男';
                        } else if (data.customerDetail.sex == "2") {
                            this.customerDetail.sexName = '未知';
                        }
                        if (data.customerDetail.cerValidDateType == '0') {
                            this.customerDetail.cerValidDateTypeName = '长期';
                        } else if (data.customerDetail.cerValidDateType == '1') {
                            this.customerDetail.cerValidDateTypeName = '非长期';
                        }
                        this.queryOccupxtion();
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            querySex () {
                const _data = {type: 'cbs_sex/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.sexList = data.params.dicts;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            queryCountry () {
                const _data = {type: 'cbs_country/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.countryList = data.params.dicts;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            queryMarriage () {
                const _data = {type: 'cbs_marriage/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.marryList = data.params.dicts;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            queryIdtype () {
                const _data = {type: 'cbs_idtype/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.idtypeList = data.params.dicts;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            queryOccup () {
                const _data = {type: 'cus_occupation/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.occupList = data.params.dicts;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            queryTax () {
                const _data = {type: 'funzg_tax_flag/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.taxList = data.params.dicts;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            updateCustomerDetail () {
                const _data = {
                    agentCode: this.user.userInfo.agentcode,
                    saasId: tool.app.saasId,
                    clientNewId: this.clientNewId,
                    resultId: this.resultId,
                    cname: this.customerDetail.cname,
                    sex: this.customerDetail.sex,
                    mobile: this.customerDetail.mobile,
                    birthday: this.customerDetail.birthday,
                    age: this.customerDetail.age,
                    nationality: this.customerDetail.nationality,
                    marriage: this.customerDetail.marriage,
                    cerType: this.customerDetail.cerType,
                    cerValidDateType: this.customerDetail.cerValidDateType,//证件有效期类型:0-长期;1-非长期
                    cerValidDate: this.customerDetail.cerValidDate,//证件有效期止期
                    cerCode: this.customerDetail.cerCode,
                    occup: this.customerDetail.occup,//行业
                    occuption: this.customerDetail.occuption,
                    occupxtion: this.customerDetail.occupxtion,//职业
                    companyName: this.customerDetail.companyName,
                    email: this.customerDetail.email,
                    taxFlag: this.customerDetail.taxFlag,//税收标志:1-中国税收居民;2-仅为非居民;3-既是中国税收居民又是其他国家（地区）税收居民
                    province: this.customerDetail.province,//常住城市
                    provinceName: this.customerDetail.provinceName,
                    city: this.customerDetail.city,
                    cityName: this.customerDetail.cityName,
                    county: this.customerDetail.county,
                    countyName: this.customerDetail.countyName,
                    address: this.customerDetail.address,
                    postalcode: this.customerDetail.postalcode,
                    homeProvince: this.customerDetail.homeProvince,//家庭地址城市
                    homeProvinceName: this.customerDetail.homeProvinceName,
                    homeCity: this.customerDetail.homeCity,
                    homeCityName: this.customerDetail.homeCityName,
                    homeCounty: this.customerDetail.homeCounty,
                    homeCountyName: this.customerDetail.homeCountyName,
                    homeAddress: this.customerDetail.homeAddress,
                    homePostalcode: this.customerDetail.homePostalcode,
                    occupname: this.customerDetail.occupname,
                    occupxtionname: this.customerDetail.occupxtionname
                }
                api_sell.updateCustomerDetail(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.$router.push({ name: 'customerDetail',params: {
                            q: this.clid,
                            r: this.clientNewId,
                            s: this.resultId
                        } })
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            saveUpdateInfo () {
                if (this.editSource == '3') {
                    if (Vd.required(this.customerDetail.cname, '请输入姓名') && Vd.name(this.customerDetail.cname, '您输入的姓名不符合规则')
                        &&Vd.required(this.customerDetail.mobile, '请输入手机号码') && Vd.mobile(this.customerDetail.mobile, '请输入正确手机号码')) {
                        this.updateCustomerDetail();
                    }
                } else {
                    this.updateCustomerDetail();
                }

            },

            showPopup (type) {
                if (type == 'sex') {
                    this.popList = this.sexList;
                    this.popTitle = '性别';
                    this.isShow = true;
                } else if (type == 'country') {
                    this.popList = this.countryList;
                    this.popTitle = '国籍';
                    this.isShow = true;
                } else if (type == 'marry') {
                    this.popList = this.marryList;
                    this.popTitle = '婚姻';
                    this.isShow = true;
                } else if (type == 'cerType') {
                    this.popList = this.idtypeList;
                    this.popTitle = '证件类型';
                    this.isShow = true;
                } else if (type == 'tax') {
                    this.popList = this.taxList;
                    this.popTitle = '税收居民';
                    this.isShow = true;
                } else if (type == 'cerValidDateType') {
                    this.popList = this.cerValidDateTypeList;
                    this.popTitle = '证件有效期类型';
                    this.isShow = true;
                } else if (type == 'occup') {
                    this.popList = this.occupList;
                    this.popTitle = '行业';
                    this.listType = 'occup';
                    this.isShow = true;
                } else if (type == 'occupxtion') {
                    this.listType = 'occupxtion';
                    this.popTitle = '职业';
                    if (!!this.customerDetail.occup || this.occupxtionList.length > 0) {
                        this.popList = this.occupxtionList;
                        this.isShow = true;
                    } else {
                        tool.toastMessage("请选择行业", 'error');
                        this.isShow = false;
                    }
                }
            },

            selectContent (values, index) {
                console.log('512',values.type)
                console.log('513', values.value)
                this.isShow = false;
                if (values.type == 'cbs_sex') {
                    this.customerDetail.sex = values.value;
                    this.customerDetail.sexName = values.name;
                } else if (values.type == 'cbs_country') {
                    this.customerDetail.nationality = values.value;
                    this.customerDetail.nationalityName = values.name;
                } else if (values.type == 'cbs_marriage') {
                    this.customerDetail.marriage = values.value;
                    this.customerDetail.marriageName = values.name;
                } else if (values.type == 'cbs_idtype') {
                    this.customerDetail.cerType = values.value;
                    this.customerDetail.cerTypeName = values.name;
                    if (values.value == '01') {
                        this.customerDetail.cerValidDateType = "";
                        this.customerDetail.cerValidDate = "";
                    }
                } else if (values.type == 'funzg_tax_flag') {
                    this.customerDetail.taxFlag = values.value;
                    this.customerDetail.taxFlagName = values.name;
                } else if (values.type == 'dateType') {
                    this.customerDetail.cerValidDateType = values.value;
                    this.customerDetail.cerValidDateTypeName = values.name;
                    if (values.value == '0') {
                        this.isLong = false;
                    } else if (values.value == '1') {
                        this.isLong = true;
                    }
                } else if (values.type == 'cus_occupation' && this.listType == 'occup') {//一级职业
                    this.customerDetail.occup = values.value;
                    this.customerDetail.occupname = values.name;
                    this.queryOccupxtion();
                    this.customerDetail.occupxtion = "";
                    this.customerDetail.occupxtionname = "";
                } else if (values.type == 'cus_occupation' && this.listType == 'occupxtion') {//三级职业
                    if (this.occupxtionList) {
                        this.customerDetail.occupxtion = values.value;
                        this.customerDetail.occupxtionname = values.name;
                    } else {

                    }
                }
            },

            showDate (type) {
                if (type == 'birthday') {
                    this.currentDateShow = true;
                } else if (type == 'endDate') {
                    this.endDateShow = true;
                }
                this.confirmType = type;
            },

            confirm(val) {
                this.currentDateShow = false;
                this.endDateShow = false;

                let year = val.getFullYear()
                let month = val.getMonth() + 1
                let day = val.getDate()
                if (month >= 1 && month <= 9) { month = `0${month}` }
                if (day >= 1 && day <= 9) { day = `0${day}` }
                let value = `${year}-${month}-${day}`
                if(this.confirmType == 'birthday'){
                    this.customerDetail.birthday = value;

                    // 计算年龄
                    let returnAge;
                    let strBirthdayArr = this.customerDetail.birthday.split("-");
                    let birthYear = strBirthdayArr[0];
                    let birthMonth = strBirthdayArr[1];
                    let birthDay = strBirthdayArr[2];

                    let d = new Date();
                    let nowYear = d.getFullYear();
                    let nowMonth = d.getMonth() + 1;
                    let nowDay = d.getDate();

                    if(nowYear == birthYear){
                        returnAge = 0;//同年 则为0岁
                    }else{
                        let ageDiff = nowYear - birthYear; //年之差
                        if(ageDiff > 0){
                            if(nowMonth == birthMonth){
                                let dayDiff = nowDay - birthDay;//日之差
                                if(dayDiff < 0){
                                    returnAge = ageDiff - 1;
                                }else{
                                    returnAge = ageDiff ;
                                }
                            }else{
                                let monthDiff = nowMonth - birthMonth;//月之差
                                if(monthDiff < 0){
                                    returnAge = ageDiff - 1;
                                }else{
                                    returnAge = ageDiff ;
                                }
                            }
                        }else{
                            returnAge = -1;//返回-1 表示出生日期输入错误 晚于今天
                        }
                    }
                    this.customerDetail.age = returnAge;
                    return returnAge;//返回周岁年龄

                }else if(this.confirmType == 'endDate'){
                    this.customerDetail.cerValidDate = value;
                }
            },

            formatter(type, value) {
                if (type === 'year') {
                    return `${value}年`
                } else if (type === 'month') {
                    return `${value}月`
                } else if (type === 'day') {
                    return `${value}日`
                }
                return value
            },

            queryOccupxtion () {//三类职业
                const _data = {type: 'cus_occupation/' + this.customerDetail.occup}
                api_sell.sysOccup(_data).then(data => {
                    this.occupxtionList = data;
                })
            },

            goBack () {
                this.$router.push({ name: 'customerDetail',params: {
                    q: this.clid,
                    r: this.clientNewId,
                    s: this.resultId
                } })
            },
            handleClickProvinceCity (type) {
                this.provinceCityIndex = type;
                this.provinceCityStatus = true;
            },
            provinceCityDataFun (params) {
                this.provinceCityStatus = false
                if (params) {
                    if (this.provinceCityIndex == 'live') { // 常住
                        this.customerDetail.province = params.provinceCode;
                        this.customerDetail.provinceName = params.provinceName;
                        this.customerDetail.city = params.cityCode;
                        this.customerDetail.cityName = params.cityName;
                        this.customerDetail.county = "";
                        this.customerDetail.countyName = "";
                        this.customerDetail.address = "";
                    } else if (this.provinceCityIndex == 'town') { // 家庭
                        this.customerDetail.homeProvince = params.provinceCode;
                        this.customerDetail.homeProvinceName = params.provinceName;
                        this.customerDetail.homeCity = params.cityCode;
                        this.customerDetail.homeCityName = params.cityName;
                        this.customerDetail.homeCounty = "";
                        this.customerDetail.homeCountyName = "";
                        this.customerDetail.homeAddress = "";
                    }
                }
            }
        },
        beforeDestroy: function() {
            document.body.removeAttribute("class", "bg7")
        },
    }
</script>
<style scoped>

</style>
