<template>
  <div>
    <div class="index-top4">
      <h3 class="ek-com-tit2 c6 f3">今日访客<span class="sp1 f-right c-p">访客<b class="fflag">5</b></span></h3>
      <div style="height:200px;width:100%;" ref="myEchart"></div>
    </div>
    <div class="index-top4">
      <h3 class="ek-com-tit2 c6 f3">近7天热门访问产品</h3>
      <div class="  message-box4 mar7-1">
        <ul class="  ">
          <li class="b-radius3  f2 mar7-2 " v-for="(item, index) in productList" :key="index">
            <div class="t-left f2 c5">{{item.busName}}</div>
            <div class="f1 c4"><span>预览</span><span class="pad4 pad4-2">{{item.count}}</span>{{item.viewTime + item.viewer + '访问'}}</div>
          </li>
          <!--<li class="b-radius3  f2 mar7-2 ">-->
            <!--<div class="t-left f2 c5">超级玛丽Max3.0重疾保险</div>-->
            <!--<div class="f1 c4"><span>预览</span><span class="pad4 pad4-2">17</span>12分钟前小明同学访问</div>-->
          <!--</li>-->
          <!--<li class="b-radius3  f2 mar7-2 ">-->
            <!--<div class="t-left f2 c5">超级玛丽Max3.0重疾保险</div>-->
            <!--<div class="f1 c4"><span>预览</span><span class="pad4 pad4-2">17</span>12分钟前小明同学访问</div>-->
          <!--</li>-->
        </ul>
      </div>

    </div>
    <div class="index-top4">
      <h3 class="ek-com-tit2 c6 f3">近7天热门访问文章</h3>
      <div class="  message-box4 mar7-1">
        <ul class="  ">
          <li class="b-radius3 spa f2 mar7-2 " v-for="(item, index) in articleList" :key="index">
            <div class="t-left f2 c5">{{item.busName}}</div>
            <div class="f1 c4"><span>预览</span><span class="pad4 pad4-2">{{item.count}}</span>{{item.viewTime + item.viewer + '访问'}}</div>
          </li>
          <!--<li class="b-radius3 spa f2 mar7-2 ">-->
            <!--<div class="t-left f2 c5">超级玛丽Max3.0重疾保险</div>-->
            <!--<div class="f1 c4"><span>预览</span><span class="pad4 pad4-2">17</span>12分钟前小明同学访问</div>-->
          <!--</li>-->
          <!--<li class="b-radius3 spa f2 mar7-2 ">-->
            <!--<div class="t-left f2 c5">超级玛丽Max3.0重疾保险</div>-->
            <!--<div class="f1 c4"><span>预览</span><span class="pad4 pad4-2">17</span>12分钟前小明同学访问</div>-->
          <!--</li>-->
        </ul>
      </div>

    </div>
  </div>
</template>

<script>
  import { mapGetters } from 'vuex'
  import * as tool from '@/common/Tool'
  import { api_statistics } from '@/api/index'
  import echarts from 'echarts'

  export default {
    name: "Visitor",
    data () {
      return {
        barData: {},
        productList: [],
        articleList: []
      }
    },
    props: {
      worksStatus: Number
    },
    created () {
      this.getCustomerBar()
      this.getVisitTrailProduct()
      this.getVisitTrailArticle()
    },
    mounted () {
      this.initChart()
    },
    methods: {
      getVisitTrailProduct () {
        const _data = {
          openId: 1,
          saasId: tool.app.saasId,
          eventCode: "funProduct"
        }
        api_statistics.getVisitTrail(_data).then(data => {
          if (data.status === tool.rtCode.status) {
            this.productList = data.result
          } else {
            tool.toastMessage(data.message, 'error')
          }
        })
      },
      getVisitTrailArticle () {
        const _data = {
          openId: 1,
          saasId: tool.app.saasId,
          eventCode: "article"
        }
        api_statistics.getVisitTrail(_data).then(data => {
          if (data.status === tool.rtCode.status) {
            this.articleList = data.result
          } else {
            tool.toastMessage(data.message, 'error')
          }
        })
      },
      getCustomerBar () {
        const _data = {
          saasId: tool.app.saasId,
          id: "00a6ded8d0ee4355b42527a95fcdd073",
          openId: 1
        }
        api_statistics.getCustomerTrail(_data).then(data => {
          if (data.status === tool.rtCode.status) {
            let result = data.result
            if (result.length > 0) {
              let xAxisData = [], seriesData = []
              for (let item of result) {
                xAxisData.push(item.eventName)
                seriesData.push(item.count)
              }
              this.barData = {
                xAxisData: xAxisData,
                seriesData: seriesData
              }
              this.initChart()
            }
          }
        })
      },
      initChart () {
        this.chart = echarts.init(this.$refs.myEchart)
        this.chart.setOption({
          backgroundColor: '#f9fafd',
          color: ['#fe961a'],
          tooltip: {
            trigger: 'axis',
            axisPointer: {            // 坐标轴指示器，坐标轴触发有效
              type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
            }
          },
          grid: {
            left: '3%',
            right: '4%',
            bottom: '3%',
            containLabel: true
          },
          textStyle: {
            color: '#666666',
            fontSize: 16
          },
          xAxis: [
            {
              type: 'category',
              data: ['产品', '计划书', '文章', '海报', '风险测评', '资产配置', '名片', '微店'], //this.barData.xAxisData, //
              axisTick: {
                show: false
              },
              axisLabel: {
                interval: 0,
                rotate: 35,
                margin: 10,
                color: '#666666',
                fontSize: 14
              },
              axisLine: {
                lineStyle: {
                  color: '#e1e2ec'
                }
              }
            }
          ],
          yAxis: [
            {
              type: 'value',
              axisLine: {
                lineStyle: {
                  color: '#e1e2ec'
                }
              },
              axisLabel: {
                color: '#999999',
                fontSize: 14
              },
              axisTick:{       // y轴刻度线
                "show":false
              },
              splitLine: {
                show: false
              },
              interval: 5 // y轴跨度
            }
          ],
          series: [
            {
              type: 'bar',
              barWidth: '50%',
              data: [9, 8, 7, 6, 5, 4, 4, 3], //this.barData.seriesData, //
              label: { // 图形上的文本标签
                show: true,
                position: 'top'
              },
              itemStyle: {    // 图形的形状
                barBorderRadius: [5, 5, 0 ,0]
              }
            }
          ]
        })
      }
    },
    // watch: {
    //   worksStatus () {
    //     if (this.worksStatus === 2) {
          // this.getCustomerBar()
    //     }
    //   }
    // }
  }
</script>

<style scoped>

</style>
