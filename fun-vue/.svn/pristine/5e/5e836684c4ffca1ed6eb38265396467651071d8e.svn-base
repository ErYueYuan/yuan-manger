<template>
    <div class="bg3">
        <div class="fun-top-panel  bg7 ">
            <span class="mess-back " @click="goBack()"><div class="cont"></div></span>
            <span class="title c6 f4 dblock2 t-center ">编辑信息</span>
        </div>

        <div class="main-container mar1  clearfix">
            <div class=" mar3-5 ">
                <section class=" pad1-3  ">
                    <section class="mar3-6 bg7  b-sh1">
                        <section class="pad1">
                            <dl class="per-box bg7 border-b1">
                                <dt class="c6 f3-1"><span class="f2 c8">*</span>&nbsp;&nbsp;姓名</dt>
                                <dd class="t-right f3 c5 ">
                                    <input type="text" class="ca-input form-control h44 t-right" placeholder="请输入姓名" v-model="customerDetail.cname">
                                </dd>
                            </dl>
                            <dl class="per-box bg7 border-b1" @click="showPopup('sex')">
                                <dt class="c6 f3-1">性别</dt>
                                <dd class="t-right f3 c5 arrow">
                                    <input type="text" class="ca-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.sexName" style="color: #333;">
                                </dd>
                            </dl>
                            <dl class="per-box bg7 border-b1">
                                <dt class="c6 f3-1"><span class="f2 c8">*</span>&nbsp;&nbsp;手机号</dt>
                                <dd class="t-right f3 c5 ">
                                    <input type="text" class="ca-input form-control h44 t-right" placeholder="请输入手机号" v-model="customerDetail.mobile" >
                                </dd>
                            </dl>
                        </section>
                    </section>
                     <!-- 出生日期 -->
                    <section class="mar3-6 bg7  b-sh1">
                        <section class="pad1">
                            <dl class="per-box bg7 border-b1" @click="showDate('birthday')">
                                <dt class="c6 f3-1">出生日期</dt>
                                <dd class="t-right f3 c5 arrow">
                                    <input type="text" class="ca-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.birthday" style="color: #333;">
                                </dd>
                            </dl>
                            <dl class="per-box bg7 border-b1">
                                <dt class="c6 f3-1">年龄</dt>
                                <dd class="t-right f3 c5">{{customerDetail.age}}</dd>
                            </dl>
                            <dl class="per-box bg7 border-b1" @click="showPopup('country')">
                                <dt class="c6 f3-1">国籍</dt>
                                <dd class="t-right f3 c5 arrow">
                                    <input type="text" class="ca-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.nationalityName" style="color: #333;">
                                </dd>
                            </dl>
                            <dl class="per-box bg7" @click="showPopup('marry')">
                                <dt class="c6 f3-1">婚姻</dt>
                                <dd class="t-right f3 c5 arrow">
                                    <input type="text" class="ca-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.marriageName" style="color: #333;">
                                </dd>
                            </dl>
                        </section>
                    </section>
                    <!-- 证件类型 -->
                    <section class="mar3-6 bg7  b-sh1">
                        <section class="pad1">
                            <dl class="per-box bg7 border-b1" @click="showPopup('cerType')">
                                <dt class="c6 f3-1">证件类型</dt>
                                <dd class="t-right f3 c5 arrow">
                                    <input type="text" class="ca-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.cerTypeName" style="color: #333;">
                                </dd>
                            </dl>
                            <dl class="per-box bg7 border-b1" @click="showPopup('cerValidDateType')">
                                <dt class="c6 f3-1">证件有效期</dt>
                                <dd class="t-right f3 c5 arrow">
                                    <input type="text" class="ca-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.cerValidDateTypeName" style="color: #333;">
                                </dd>
                            </dl>
                            <dl class="per-box bg7 border-b1" @click="showDate('endDate')" v-show="isLong">
                                <dt class="c6 f3-1" style="width:auto;">证件有效期止期</dt>
                                <dd class="t-right f3 c5 arrow" style="margin-left: 125px;">
                                    <input type="text" class="ca-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.cerValidDate" style="color: #333;">
                                </dd>
                            </dl>
                            <dl class="per-box bg7">
                                <dt class="c6 f3-1">证件号码</dt>
                                <dd class="t-right f3 c5 arrow">{{customerDetail.cerCode}}</dd>
                            </dl>
                        </section>
                    </section>
                    <!-- 行业 -->
                    <section class="mar3-6 bg7  b-sh1">
                        <section class="pad1">
                            <dl class="per-box bg7 border-b1" @click="showPopup('occup')">
                                <dt class="c6 f3-1">行业</dt>
                                <dd class="t-right f3 c5 arrow">
                                    <input type="text" class="ca-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.occupname" style="color: #333;">
                                </dd>
                            </dl>
                            <dl class="per-box bg7 border-b1" @click="showPopup('occupxtion')">
                                <dt class="c6 f3-1">职业</dt>
                                <dd class="t-right f3 c5 arrow">
                                    <input type="text" class="ca-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.occupxtionname" style="color: #333;">
                                </dd>
                            </dl>
                            <dl class="per-box bg7">
                                <dt class="c6 f3-1">公司名称</dt>
                                <dd class="t-right f3 c5 ">
                                    <input type="text" class="ca-input form-control h44 t-right" placeholder="请输入姓名" value="">
                                </dd>
                            </dl>
                            <dl class="per-box bg7 border-b1">
                                <dt class="c6 f3-1">电子邮箱</dt>
                                <dd class="t-right f3 c5 ">
                                    <input type="text" class="ca-input form-control h44 t-right" placeholder="请输入姓名" v-model="customerDetail.email">
                                </dd>
                            </dl>
                            <dl class="per-box bg7 border-b1" @click="showPopup('tax')">
                                <dt class="c6 f3-1">税收居民</dt>
                                <dd class="t-right f3 c5 arrow">
                                    <input type="text" class="ca-input form-control h44 t-right" placeholder="请选择" disabled  :value="customerDetail.taxName" style="color: #333;">
                                </dd>
                            </dl>
                        </section>
                    </section>
                     <!-- 常住城市 -->
                    <section class="mar3-6 bg7  b-sh1">
                        <section class="pad1">
                            <dl class="per-box pb2 bg7 border-b1">
                                <dt class="c6 f3-1">常住城市</dt>
                                <dd class="t-right f3 c5 " @click="handleClickProvinceCity('live')">{{customerDetail.provinceName}} - {{customerDetail.cityName}}
                                    <!-- <input type="text" class="ca-input form-control h44 t-right" placeholder="请选择" > -->
                                </dd>
                            </dl>
                            <dl class="per-box line2 bg7 border-b1">
                                <dt class="c6 f3-1">详细地址</dt>
                                <dd class="t-right f3 c5 ">
                                    <input type="text" class="ca-input form-control h44 t-right" placeholder="请输入详细地址" v-model="customerDetail.address">
                                </dd>
                            </dl>
                            <dl class="per-box bg7">
                                <dt class="c6 f3-1">邮政编码</dt>
                                <dd class="t-right f3 c5 ">
                                    <input type="text" class="ca-input form-control h44 t-right" placeholder="请输入邮政编码" v-model="customerDetail.postalcode">
                                </dd>
                            </dl>
                        </section>
                    </section>
                     <!-- 家庭地址城市 -->
                    <section class="mar3-6 bg7  b-sh1">
                        <section class="pad1">
                            <dl class="per-box pb2 bg7 border-b1">
                                <dt class="c6 f3-1">家庭地址城市</dt>
                                <dd class="t-right f3 c5 " @click="handleClickProvinceCity('town')">{{customerDetail.homeProvinceName}} - {{customerDetail.homeCityName}}
                                    <!-- <input type="text" class="ca-input form-control h44 t-right" placeholder="请选择" v-model="customerDetail.homeProvinceName - customerDetail.homeCityName"> -->
                                </dd>
                            </dl>
                            <dl class="per-box line2 bg7 border-b1">
                                <dt class="c6 f3-1">家庭详细地址</dt>
                                <dd class="t-right f3 c5 ">
                                    <input type="text" class="ca-input form-control h44 t-right" placeholder="请输入详细地址" v-model="customerDetail.homeAddress">
                                </dd>
                            </dl>
                            <dl class="per-box bg7">
                                <dt class="c6 f3-1">邮政编码</dt>
                                <dd class="t-right f3 c5 ">
                                    <input type="text" class="ca-input form-control h44 t-right" placeholder="请输入邮政编码" v-model="customerDetail.homePostalcode">
                                </dd>
                            </dl>
                        </section>
                    </section><br>

                </section>
            </div>
        </div>
        <div class="posi5 pad5-8 bg7" @click="saveUpdateInfo()">
            <button type="button" class="hx-bt3 t-center">保存</button>
        </div>
        <province-city @provinceCityData="provinceCityDataFun"
                       :provinceCityIndex="provinceCityIndex"
                       v-if="provinceCityStatus"></province-city>


        <!-- 弹出层 -->
        <van-popup
            v-model="showList"
            position="bottom"
            :style="{height: '50%'}"
            round
            safe-area-inset-bottom
            >
            <div v-for="(item, index) in allList" :key="index" @click="chooseValue(item)" class="el-loading-text border-b pad">{{item.name}}</div>
        </van-popup>
        <!-- 出生日期 -->
        <van-popup
            v-model="currentDateShow"
            position="bottom"
            :style="{height:'50%'}"
        >
            <van-datetime-picker
                @confirm="confirm"
                @cancel="currentDateShow = false"
                v-model="currentDate"
                type="date"
                title="选择年月日"
                :formatter="formatter"
                :max-date="maxDate"
            />
        </van-popup>
        <!-- 证件有效期止期 -->
        <van-popup
            v-model="endDateShow"
            position="bottom"
            :style="{height:'50%'}"
        >
            <van-datetime-picker
                @confirm="confirm"
                @cancel="endDateShow = false"
                v-model="currentDate"
                type="date"
                title="选择年月日"
                :formatter="formatter"
            />
        </van-popup>
    </div>
</template>
<script>
    import Vue from 'vue'
    import { mapGetters } from 'vuex'
    import * as tool from '@/common/Tool'
    import { api_sell } from '@/api/index'
    import { ProvinceCity } from '@/components/index'
    import DataSource from '@/common/DataSource'
    import '@vant/touch-emulator'
    import { Popup, DatetimePicker, Picker } from 'vant'
    import Vd from '@/common/Validator'
    // import Rules from './Rules'
    // import Works from './Works'
    // import Visitor from './Visitor'
    // import Performance from './Performance'

    Vue.use(Popup)
    Vue.use(DatetimePicker)
    Vue.use(Picker)

    export default {
        name: "EditCustomerDetail",
        data () {
            return {
                clientId: this.$route.params.q,
                clientNewId: this.$route.params.r,
                customerDetail: [],
                allList: [],
                sexList: [],
                countryList: [],
                marryList: [],
                idtypeList: [],
                occupList: [],//一类职业
                occupxtionList: [],//三类职业
                taxList: [],
                cerValidDateTypeList: [
                    {
                        name: '长期',
                        value: "0"
                    },
                    {
                        name: '非长期',
                        value: "1"
                    }
                ],
                showList: false,
                listType: "",
                maxDate: new Date(),
                currentDate: new Date(),
                currentDateShow: false,
                endDateShow: false,
                confirmType: "",
                isLong: false,
                provinceCityIndex: '', //
                provinceCityStatus: false
            }
        },
        computed: {
            ...mapGetters(['user']),
        },
        components: {
            'province-city': ProvinceCity
            // 'rules': Rules,
            // 'works': Works,
            // 'visitor': Visitor,
            // 'performance': Performance
        },
        created () {
            this.getCustomerDetail();
            this.querySex();//性别
            this.queryCountry();//国籍
            this.queryMarriage();//婚姻
            this.queryIdtype();//证件类型
            this.queryOccup();//行业（一类）
            this.queryTax();//税收居民
            // this.sysArea();//获取地区
        },
        methods: {

            getCustomerDetail (clientId) {
                const _data = {
                    saasId: tool.app.saasId,
                    clientId: this.clientId
                }
                api_sell.getCustomerDetail(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.customerDetail = data.customerDetail;
                        if (data.customerDetail.sex == "0") {
                            this.customerDetail.sexName = '女';
                        } else if (data.customerDetail.sex == "1") {
                            this.customerDetail.sexName = '男';
                        } else if (data.customerDetail.sex == "2") {
                            this.customerDetail.sexName = '未知';
                        }
                        this.queryOccupxtion();
                        // this.customerDetail.cname = data.customerDetail.cname;
                        // this.customerDetail.sex = data.customerDetail.sex;
                        // this.customerDetail.birthday = data.customerDetail.birthday;
                        // this.customerDetail.age = data.customerDetail.age;
                        // this.customerDetail.nationality = data.customerDetail.nationality;//国籍
                        // this.customerDetail.marriage = data.customerDetail.marriage;//1-已婚;2-未婚;3-离异;4-再婚;5-丧偶
                        // this.customerDetail.cerType = data.customerDetail.cerType;
                        // this.customerDetail.cerCode = data.customerDetail.cerCode;
                        // this.customerDetail.cerTypeName = data.customerDetail.cerTypeName;
                        // this.customerDetail.cerValidDateType = data.customerDetail.cerValidDateType;//长短期有效
                        // this.customerDetail.occup = data.customerDetail.occup;
                        // this.customerDetail.occupname = data.customerDetail.occupname;
                        // this.customerDetail.occupxtion = data.customerDetail.occupxtion;
                        // this.customerDetail.occupxtionname = data.customerDetail.occupxtionname;
                        // this.customerDetail.email = data.customerDetail.email;
                        // this.customerDetail.mobile = data.customerDetail.mobile;
                        // this.customerDetail.province = data.customerDetail.province;
                        // this.customerDetail.city = data.customerDetail.city;
                        // this.customerDetail.county = data.customerDetail.county;
                        // this.customerDetail.provinceName = data.customerDetail.provinceName;
                        // this.customerDetail.cityName = data.customerDetail.cityName;
                        // this.customerDetail.countyName = data.customerDetail.countyName;
                        // this.customerDetail.address = data.customerDetail.address;
                        // this.customerDetail.postalcode = data.customerDetail.postalcode;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            querySex () {
                const _data = {type: 'cbs_sex/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.sexList = data.params.dicts;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            queryCountry () {
                const _data = {type: 'cbs_country/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.countryList = data.params.dicts;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            queryMarriage () {
                const _data = {type: 'cbs_marriage/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.marryList = data.params.dicts;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            queryIdtype () {
                const _data = {type: 'cbs_idtype/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.idtypeList = data.params.dicts;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            queryOccup () {
                const _data = {type: 'cus_occupation/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.occupList = data.params.dicts;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            queryTax () {
                const _data = {type: 'funzg_tax_flag/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.taxList = data.params.dicts;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            sysArea () {
                const _data = {type: 'root'}
                api_sell.sysArea(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        //
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            saveUpdateInfo () {
                if (Vd.required(this.customerDetail.cname, '请输入姓名') && Vd.name(this.customerDetail.cname, '您输入的姓名不符合规则')
                    &&Vd.required(this.customerDetail.mobile, '请输入手机号码') && Vd.mobile(this.customerDetail.mobile, '请输入正确手机号码')) {
                    const _data = {
                        saasId: tool.app.saasId,
                        clientId: this.clientId,
                        cname: this.customerDetail.cname,
                        sex: this.customerDetail.sex,
                        mobile: this.customerDetail.mobile,
                        birthday: this.customerDetail.birthday,
                        age: this.customerDetail.age,
                        nationality: this.customerDetail.nationality,
                        marriage: this.customerDetail.marriage,
                        cerType: this.customerDetail.cerType,
                        cerValidDateType: this.customerDetail.cerValidDateType,//证件有效期类型:0-长期;1-非长期
                        cerValidDate: this.customerDetail.cerValidDate,//证件有效期止期
                        cerCode: this.customerDetail.cerCode,
                        occup: this.customerDetail.occup,//行业
                        occuption: this.customerDetail.occuption,
                        occupxtion: this.customerDetail.occupxtion,//职业
                        companyName: this.customerDetail.companyName,
                        email: this.customerDetail.email,
                        taxFlag: this.customerDetail.taxFlag,//税收标志:1-中国税收居民;2-仅为非居民;3-既是中国税收居民又是其他国家（地区）税收居民
                        province: this.customerDetail.city,//常住城市
                        provinceName: this.customerDetail.provinceName,
                        city: this.customerDetail.city,
                        cityName: this.customerDetail.cityName,
                        county: this.customerDetail.county,
                        countyName: this.customerDetail.countyName,
                        address: this.customerDetail.address,
                        postalcode: this.customerDetail.postalcode,
                        homeProvince: this.customerDetail.homeProvince,//家庭地址城市
                        homeProvinceName: this.customerDetail.homeProvinceName,
                        homeCity: this.customerDetail.homeCity,
                        homeCityName: this.customerDetail.homeCityName,
                        homeCounty: this.customerDetail.homeCounty,
                        homeCountyName: this.customerDetail.homeCountyName,
                        homeAddress: this.customerDetail.homeAddress,
                        homePostalcode: this.customerDetail.homePostalcode
                    }
                    api_sell.updateCustomerInfo(_data).then(data => {
                        if (data.status == tool.rtCode.status) {
                            this.$router.push({ path: '/customerDetail/' + this.clientId + '/' + this.clientNewId});
                        } else {
                            tool.toastMessage(data.message, 'error');
                        }
                    })
                }
            },

            showPopup (type) {
                this.listType = type;
                if (this.listType == 'sex') {
                    this.allList = this.sexList;
                    this.showList = true;
                } else if (this.listType == 'country') {
                    this.allList = this.countryList;
                    this.showList = true;
                } else if (this.listType == 'marry') {
                    this.allList = this.marryList;
                    this.showList = true;
                } else if (this.listType == 'cerType') {
                    this.allList = this.idtypeList;
                    this.showList = true;
                } else if (this.listType == 'tax') {
                    this.allList = this.taxList;
                    this.showList = true;
                } else if (this.listType == 'cerValidDateType') {
                    this.allList = this.cerValidDateTypeList;
                    this.showList = true;
                } else if (this.listType == 'occup') {
                    this.allList = this.occupList;
                    this.showList = true;
                } else if (this.listType == 'occupxtion') {
                    if (!!this.customerDetail.occup || this.occupxtionList.length > 0) {
                        this.allList = this.occupxtionList;
                        this.showList = true;
                    } else {
                        tool.toastMessage("请选择行业", 'error');
                        this.showList = false;
                    }
                }
            },

            showDate (type) {
                if (type == 'birthday') {
                    this.currentDateShow = true;
                } else if (type == 'endDate') {
                    this.endDateShow = true;
                }
                this.confirmType = type;
            },

            chooseValue (item) {
                if (this.listType == 'sex') {
                    this.customerDetail.sex = item.value;
                    this.customerDetail.sexName = item.name;
                } else if (this.listType == 'country') {
                    this.customerDetail.nationality = item.value;
                    this.customerDetail.nationalityName = item.name;
                } else if (this.listType == 'marry') {
                    this.customerDetail.marriage = item.value;
                    this.customerDetail.marriageName = item.name;
                } else if (this.listType == 'cerType') {
                    this.customerDetail.cerType = item.value;
                    this.customerDetail.cerTypeName = item.name;
                } else if (this.listType == 'tax') {
                    this.customerDetail.taxFlag = item.value;
                    this.customerDetail.taxName = item.name;
                } else if (this.listType == 'cerValidDateType') {
                    this.customerDetail.cerValidDateType = item.value;
                    this.customerDetail.cerValidDateTypeName = item.name;
                    if (item.value == '0') {
                        this.isLong = false;
                    } else if (item.value == '1') {
                        this.isLong = true;
                    }
                } else if (this.listType == 'occup') {
                    this.customerDetail.occup = item.value;
                    this.customerDetail.occupname = item.name;
                    this.queryOccupxtion();
                    this.customerDetail.occupxtion = "";
                    this.customerDetail.occupxtionname = "";
                } else if (this.listType == 'occupxtion') {
                    if (!!this.occupxtionList) {
                        this.customerDetail.occupxtion = item.value;
                        this.customerDetail.occupxtionname = item.name;
                    } else {
                        alert('1234567')
                    }
                }
                this.showList = false;
            },

            confirm(val) {
                let year = val.getFullYear()
                let month = val.getMonth() + 1
                let day = val.getDate()
                if (month >= 1 && month <= 9) { month = `0${month}` }
                if (day >= 1 && day <= 9) { day = `0${day}` }
                let value = `${year}-${month}-${day}`
                if(this.confirmType == 'birthday'){
                    this.customerDetail.birthday = value;
                }else if(this.confirmType == 'endDate'){
                    this.customerDetail.cerValidDate = value;
                }
                this.currentDateShow = false;
                this.endDateShow = false;

                // 计算年龄
                let returnAge;
                let strBirthdayArr = this.customerDetail.birthday.split("-");
                let birthYear = strBirthdayArr[0];
                let birthMonth = strBirthdayArr[1];
                let birthDay = strBirthdayArr[2];

                let d = new Date();
                let nowYear = d.getFullYear();
                let nowMonth = d.getMonth() + 1;
                let nowDay = d.getDate();

                if(nowYear == birthYear){
                    returnAge = 0;//同年 则为0岁
                }else{
                    let ageDiff = nowYear - birthYear; //年之差
                    if(ageDiff > 0){
                        if(nowMonth == birthMonth){
                            let dayDiff = nowDay - birthDay;//日之差
                            if(dayDiff < 0){
                                returnAge = ageDiff - 1;
                            }else{
                                returnAge = ageDiff ;
                            }
                        }else{
                            let monthDiff = nowMonth - birthMonth;//月之差
                            if(monthDiff < 0){
                                returnAge = ageDiff - 1;
                            }else{
                                returnAge = ageDiff ;
                            }
                        }
                    }else{
                        returnAge = -1;//返回-1 表示出生日期输入错误 晚于今天
                    }
                }
                this.customerDetail.age = returnAge;
                return returnAge;//返回周岁年龄
            },

            formatter(type, value) {
                if (type === 'year') {
                    return `${value}年`
                } else if (type === 'month') {
                    return `${value}月`
                } else if (type === 'day') {
                    return `${value}日`
                }
                return value
            },

            queryOccupxtion () {//三类职业
                const _data = {type: 'cus_occupation/' + this.customerDetail.occup}
                api_sell.sysOccup(_data).then(data => {
                    this.occupxtionList = data;
                })
            },

            goBack () {
                this.$router.push({ path: '/customerDetail/' + this.clientId + '/' + this.clientNewId});
                // this.$router.go(-1);
            },
            handleClickProvinceCity (type) {
                this.provinceCityIndex = type;
                this.provinceCityStatus = true;
            },
            provinceCityDataFun (params) {
                this.provinceCityStatus = false
                if (params) {
                    console.log(params)
                    if (this.provinceCityIndex == 'live') { // 常住
                        this.customerDetail.province = params.provinceCode;
                        this.customerDetail.provinceName = params.provinceName;
                        this.customerDetail.city = params.cityCode;
                        this.customerDetail.cityName = params.cityName;
                        this.customerDetail.county = "";
                        this.customerDetail.countyName = "";
                        this.customerDetail.address = "";
                    } else if (this.provinceCityIndex == 'town') { // 家庭
                        this.customerDetail.homeProvince = params.provinceCode;
                        this.customerDetail.homeProvinceName = params.provinceName;
                        this.customerDetail.homeCity = params.cityCode;
                        this.customerDetail.homeCityName = params.cityName;
                        this.customerDetail.homeCounty = "";
                        this.customerDetail.homeCountyName = "";
                        this.customerDetail.homeAddress = "";
                    }
                }
            }
        }
    }
</script>
<style scoped>

</style>
