<template>
  <div>
    <top-panel :topPanel="topPanel" v-if="!sourceChannel.isWeiXin"></top-panel>
    <div class="main-container clearfix" :class="!sourceChannel.isWeiXin?'mar1':''">
      <div class="pad5-1 clearfix">
        <div id="banner" class="swiper-container">
          <div class="swiper-wrapper" style="max-height: 150px;">
            <div class="swiper-slide" v-for="(item, index) in bannerList" :key="index">
              <img class="img" @click="swiperClick(item)" :src="item.posterImage"/>
            </div>
          </div>
          <div class="swiper-pagination"></div>
        </div>
      </div>
      <div class="pad6">
        <van-tabs @click="handleClickClass">
          <van-tab title="精品课程"></van-tab>
          <van-tab title="热门文章"></van-tab>
        </van-tabs>
      </div>
      <div v-show="page===0">
        <div id="courseTag" class="swiper-container">
          <div class="swiper-wrapper">
            <div class="swiper-slide" v-for="(tags, index) in courseClassTagTwo" :key="index" @click="swiperClick(tags, index)">
              <div class="pad8-1"><span class="hx-bt3 bt2 f2 active">{{tags.classname}}</span></div>
            </div>
          </div>
        </div>
      </div>
      <div v-show="page===1">
        <div id="courseTag" class="swiper-container">
          <div class="swiper-wrapper">
            <div class="swiper-slide" v-for="(tags, index) in courseClassTagTwo" :key="index" @click="swiperClick(tags, index)">
              <div class="pad8-1"><span class="hx-bt3 bt2 f2 active">{{tags.classname}}</span></div>
            </div>
          </div>
        </div>
      </div>
      <section class="blk-cont no-md">
        <ul class="cont-blk icon-wrap clearfix">
          <li
            class="li-p bg7 posi2 clearfix"
            v-for="(article,index) in articleList"
            :key="index"
            @click="goInfoDetail(article)"
          >
            <div class="ek f-left posi2">
              <img class="lazy-p" :src="article.coverImage" alt="pic" />
            </div>
            <div class="info-blk no-m">
              <div class="box">
                <h3 class="no-p1 f3 c44">{{article.title}}</h3>
                <p class="subtit no-in f1 c222">{{article.simple}}</p>
              </div>
              <div class="f1 time">
                <b class="icon1"></b>
                {{article.readCount}}观看
              </div>
            </div>
          </li>
        </ul>
      </section>
    </div>
  </div>
</template>

<script>
  import Vue from 'vue'
  import { Tab, Tabs, Tag } from 'vant'
  import { mapGetters } from "vuex"
  import { TopPanel } from "@/components/index"
  import { api_system, api_article } from "@/api/index"
  import * as tool from "@/common/Tool"
  import * as scroll from "@/common/Scroll";
  import Swiper from 'swiper'
  import 'swiper/css/swiper.min.css'
  import 'swiper/js/swiper.min.js'

  Vue.use(Tab)
  Vue.use(Tabs)
  Vue.use(Tag)

  export default {
    name: "CoursesList",
    data () {
      return {
        sourceChannel: tool.globalData,
        topPanel: {
          back: true,
          titles: "学习课堂",
        },
        bannerList: [],
        userName: '',
        greetings: '',
        dataFlag: '',
        isLoad: '',
        courseClassTagOne: [],
        courseClassTagTwo: [],
        courseOneTagID: '',
        articleClassTagOne: [],
        articleClassTagTwo: [],
        articleList: [],
        search_val: '',
        page: 0 // 0-精品课程，1-热门文章
      }
    },
    components: {
      // 'swiper': Swiper,
      'top-panel': TopPanel,
    },
    created () {
      this.getBannerData()
      this.getCoursesTagData()
    },
    mounted () {
      window.addEventListener("scroll", this.handleScroll);
    },
    methods: {
      initSwiper () {
        const swiper = new Swiper('#courseTag', {
          freeMode: true,
          freeModeMomentumRatio: 0.5,
          slidesPerView: 4,
          speed:300,//滑动开始到滑动结束的时间
          observer:true,//修改swiper自己或子元素时，自动初始化swiper
          observeParents:true,//修改swiper的父元素时，自动初始化swiper
          autoplayDisableOnInteraction:false,//用户操作swiper之后是否禁止autoplay
        });
      },
      initBannerSwiper() {
        const swiper = new Swiper('#banner', {
          autoplay: {
            delay: 5000,
            disableOnInteraction: false,
          },
          loop: true,
          pagination: {
            el: '.swiper-pagination',
            clickable: true,
          },
          observer: true,//修改swiper自己或子元素时，自动初始化swiper
          observeParents: true//修改swiper的父元素时，自动初始化swiper
        })
      },
      swiperClick (item) {
        if (item.pageUrl) {
          window.open(item.pageUrl)
        }
      },
      getBannerData() {
        var _data = {
          limit: tool.pagination.pagesize, // 页面长度
          offset: tool.pagination.pageoffset, // 页面偏移
          type: "0", //广告类型:0-懒掌柜首页广告栏,1-产品广告栏,2-资讯广告栏,3-培训广告位,4-理赔广告栏,5-DDSS广告栏，6-e管家首页广告位，7-财富精选广告位
          comcode: "1000000",
          platformId: 'f2ce8561055a40d5a5e7dcdffde1e8bc' // tool.app.platformId, //区分项目
        };
        api_system.advertismentList4Front(_data).then((res) => {
          if (res.status == tool.rtCode.status) {
            this.bannerList = res.advertismentList;
            this.initBannerSwiper()
          }
        });
      },
      getCoursesTagData () {
        let _data = {
          saasId: tool.app.saasId,
          classlevel: 0
        }
        api_article.courseClassList(_data).then(data => {
          if (data.status === tool.rtCode.status) {
            this.courseClassTagOne = data.classList
            this.courseOneTagID = this.courseClassTagOne[0].id
            this.getCoursesTagTwoData()
          }
        })
      },
      getCoursesTagTwoData () {
        let _data = {
          saasId: tool.app.saasId,
          classlevel: 1,
          classid: 'd5d494a7d5874ae29fe0dc7622e19fd5' // this.courseOneTagID
        }
        api_article.courseClassList(_data).then(data => {
          if (data.status === tool.rtCode.status) {
            this.courseClassTagTwo = data.classList
            this.initSwiper()
          }
        })
      },



      handleClickClass (index, title) {
        console.log(index)
      },
      swiperClick () {

      },
      handleScroll() {
        if (scroll.getScrollTop() + scroll.getClientHeight() > scroll.getScrollHeight() - 5) {
          if (this.articleList.length == this.articleTotal) return;
          if (!this.isLoad) {
            this.isLoad = true;
            this.loadMore();
          }
        }
      },
      loadMore() {
        let offset = this.articleList.length;
        this.getInfoList(this.dataFlag, offset);
      }
    },
    destroyed() {
      window.removeEventListener('scroll', this.handleScroll)
    }
  }
</script>

<style scoped>

</style>
