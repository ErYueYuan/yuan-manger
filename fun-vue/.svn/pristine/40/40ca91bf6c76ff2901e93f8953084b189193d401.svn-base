<template>
    <div>
        <div class="fun-top-panel bg7" @click="goBack()">
            <span class="mess-back "><div class="cont"></div></span>
            <span class="title c3 f3 dblock2 t-center ">自建客户</span>
        </div>
        <div class="main-container mar3-7 no-bot clearfix" style="padding-bottom: 220px;">
            <section class="b-radius3  bg7 mar3-2">
                <dl class="per-box52   border-b">
                    <dt class="c6 f3-1">姓名<span class="f2 c8">&nbsp;*</span></dt>
                    <dd class="t-right f3 c6 clearfix"><input type="text" class="ca-input w2 t-right" placeholder="请输入" v-model="createCustomerList.name"></dd>
                </dl>
                <dl class="per-box52   border-b">
                    <dt class="c6 f3-1">手机号码<span class="f2 c8">&nbsp;*</span></dt>
                    <dd class="t-right c6 f3 c2"><input type="text" class="ca-input t-right" placeholder="请输入" v-model="createCustomerList.mobile"></dd>
                </dl>
                <dl class="per-box52   border-b">
                    <dt class="c6 f3-1">性别</dt>
                    <dd class="t-right f3 ">
                    <div class="f-right pad4 t-left">
                        <label class="reg-sel-btn posi2">
                            <input type="radio" name="a" v-model="createCustomerList.sex" @change="chooseSex('man')">
                            <b class="btn">男</b>
                        </label>
                    </div>
                    <div class="f-right pad4 t-left">
                        <label class="reg-sel-btn posi2">
                            <input type="radio" name="a" v-model="createCustomerList.sex" @change="chooseSex('woman')">
                            <b class="btn">女</b>
                        </label>
                    </div>
                    </dd>
                </dl>
                <dl class="per-box52   border-b" @click="showDate()">
                    <dt class="c6 f3-1">出生日期</dt>
                    <dd class="t-right f3 c6 arrow">
                        <input type="text" class="ca-input t-right" disabled placeholder="请选择" v-model="createCustomerList.birthday">
                    </dd>
                </dl>
                <dl class="per-box52   border-b" @click="showPicker('country')">
                    <dt class="c6 f3-1">国籍</dt>
                    <dd class="t-right f3 c6 arrow">
                        <input type="text" class="ca-input t-right" disabled placeholder="请选择" v-model="createCustomerList.countryName">
                    </dd>
                </dl>
                <dl class="per-box52   " @click="showPicker('marry')">
                    <dt class="c6 f3-1">婚姻</dt>
                    <dd class="t-right f3 c6 arrow">
                        <input type="text" class="ca-input t-right" disabled placeholder="请选择" v-model="createCustomerList.marryName">
                    </dd>
                </dl>
            </section>
        </div>
        <div class="pad5-9 posi1 b1 bg7 border-t">
            <div class="reg-bt t-center">
                <button type="button" class="b-right" style="width: 100%;border-radius: 50px;" @click="submit()">完成</button>
            </div>
        </div>

        <van-popup
            v-model="currentDateShow"
            position="bottom"
            :style="{height:'50%'}"
            round
        >
            <van-datetime-picker
                @confirm="confirm"
                @cancel="currentDateShow = false"
                v-model="currentDate"
                type="date"
                title="出生日期"
                :min-date="minDate"
                :max-date="maxDate"
                :formatter="formatter"
            />
        </van-popup>

        <van-popup v-model="isPicker" round position="bottom">
            <van-picker
                show-toolbar
                :value-key="contentValueKey"
                :columns="selectList"
                @cancel="isPicker = false"
                @confirm="selectContent"
                :style="{width: '100%'}"
            />
        </van-popup>
    </div>
</template>
<script>
    import Vue from 'vue'
    import { mapGetters } from 'vuex'
    import * as tool from '@/common/Tool'
    import { api_sell } from '@/api/index'
    import DataSource from '@/common/DataSource'
    import '@vant/touch-emulator'
    import { Popup, Picker, DatetimePicker } from 'vant'
    import Vd from '@/common/Validator'

    Vue.use(Popup)
    Vue.use(Picker)
    Vue.use(DatetimePicker)

    export default {
        name: "CreateCustomer",
        data () {
            return {
                createCustomerList: [], //自建客户
                countryList: [], //国籍
                marriageList: [], //婚姻
                isPicker: false,
                contentValueKey: 'name',
                selectList: [],
                currentDateShow: false,
                minDate: new Date(1870, 0, 1),
                maxDate: new Date(),
                currentDate: new Date(),
            }
        },
        computed: {
            ...mapGetters(['user']),
        },
        components: {

        },
      beforeCreate: function() {
        document.getElementsByTagName("body")[0].className = "bg3";
      },
        created () {
            this.queryCountry();//国籍
            this.queryMarriage();//婚姻
        },
        methods: {


            queryCountry () {
                const _data = {type: 'cbs_country/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.countryList = data.params.dicts;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            queryMarriage () {
                const _data = {type: 'cbs_marriage/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.marriageList = data.params.dicts;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            showPicker (type) {
                this.isPicker = true;
                if (type == 'country') {
                    this.selectList = this.countryList;
                } else if (type == 'marry') {
                    this.selectList = this.marriageList;
                }
            },

            selectContent (values, index) {
                this.isPicker = false;
                if (values.type == "cbs_country") {
                    this.createCustomerList.countryName = values.name;
                    this.createCustomerList.country = values.value;
                } else if (values.type == "cbs_marriage") {
                    this.createCustomerList.marryName = values.name;
                    this.createCustomerList.marry = values.value;
                }
            },

            showDate () {
                this.currentDateShow = true;
            },

            confirm(val) {
                let year = val.getFullYear()
                let month = val.getMonth() + 1
                let day = val.getDate()
                if (month >= 1 && month <= 9) { month = `0${month}` }
                if (day >= 1 && day <= 9) { day = `0${day}` }
                let value = `${year}-${month}-${day}`
                this.createCustomerList.birthday = value;
                this.currentDateShow = false;
            },

            formatter(type, value) {
                if (type === 'year') {
                    return `${value}年`
                } else if (type === 'month') {
                    return `${value}月`
                } else if (type === 'day') {
                    return `${value}日`
                }
                return value
            },

            chooseSex (type) {
                if (type == 'man') {
                    this.createCustomerList.sex = "1";
                } else if (type == 'woman') {
                    this.createCustomerList.sex = "0";
                }
            },

            submit () {
                if (Vd.required(this.createCustomerList.name, '请输入姓名') && Vd.name(this.createCustomerList.name, '您输入的姓名不符合规则')
                    && Vd.required(this.createCustomerList.mobile, '请输入手机号码') && Vd.mobile(this.createCustomerList.mobile, '请输入正确手机号码')) {
                        const _data = {
                            saasId: tool.app.saasId,
                            cname: this.createCustomerList.name,
                            mobile: this.createCustomerList.mobile,
                            sex: this.createCustomerList.sex,
                            birthday: this.createCustomerList.birthday,
                            nationality: this.createCustomerList.country,
                            marriage: this.createCustomerList.marry
                        }

                        api_sell.customerAdd(_data).then(data => {
                            if (data.status == tool.rtCode.status) {
                                this.$router.go(-1);
                            } else {
                                tool.toastMessage(data.message, 'error');
                            }
                        })
                    }
            },

            goBack () {
                this.$router.push({ path: '/sellList/' + '1'});
            },




        }
    }
</script>
<style scoped>

</style>
