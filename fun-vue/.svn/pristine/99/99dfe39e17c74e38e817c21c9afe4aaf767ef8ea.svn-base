<template>
    <div class="bg3">
        <div class="fun-top-panel  bg7" @click="goBack()">
            <span class="mess-back "><div class="cont"></div></span>
            <span class="title c6 f4 dblock2 t-center ">{{fromType == 'edit' ? '编辑跟进记录' : '新增跟进记录'}}</span>
        </div>

        <div class="main-container mar1  clearfix">
            <div class=" bg7 b-radius2">
                <section class="pad5-4">
                    <div class="timer-box f2-1">
                        <dl class="per-box52 no-p border-b" @click="showCallbackTime('follow')" style="width: 94%;margin-left: 15px;">
                            <dt class="c4 f3-1">请选择跟进时间</dt>
                            <dd class="t-right c6 f3 c2 arrow"><input type="text" class="ca-input t-right" style="width: 100%;" disabled :value="followList.followTime"></dd>
                        </dl>
                    </div>
                </section>
            </div>
            <div class="mar3-2">
                <section class=" bg7 pad5-4">
                    <h3 class="f3-1 pad6-2 mar0 t-left c6 bold">跟进内容</h3>
                    <div>
                        <section class="tab-box">
                            <label v-for="(item, index) in followContentList" :key="index">
                                <input class="hide" type="checkbox" name="b" v-model="followContents" :value="item.value"><span style="padding: 6px 10px;">{{item.name}}</span><!-- active -->
                            </label>
                        </section>
                        <div class="mar3-2">
                            <textarea class="ca-input95 f3" placeholder="输入详细内容" v-model="followList.followContentDetail"></textarea>
                        </div>
                    </div>
                </section>

                <section class=" bg7 mar3-2 pad5-9">
                    <h3 class="c6 f3-1 pad6-2 bold">客户需求评估</h3>
                    <div class="sel-b3">
                        <!-- <label>
                            <input type="checkbox"><b>高预算</b>
                        </label>
                        <label>
                            <input type="checkbox"><b>儿童保险</b>
                        </label>
                        <label>
                            <input type="checkbox"><b>高产</b>
                        </label>
                        <div class="add c-p" @click="editLabel()">
                            <span class="" style="font-size: 14px;color: #666;background:#F5F5F5;border:none;"><img src="../../assets/img/szxx/edit.png" alt="" style="width: 16px;height:16px;">编辑</span>
                        </div> -->

                        <section class="tab-box" style="width: 100%;">
                            <span class=" active c-p">高预算</span>
                            <span class=" active c-p">儿童保险</span>
                            <span class=" active c-p">高产</span>
                            <span class=" c-p" @click="editLabel()">
                                <img src="../../assets/img/szxx/edit.png" style="width: 16px;height:16px;">编辑
                            </span>
                        </section>

                    </div>
                </section>

                <section class=" bg7 mar3-2 pad1-3">
                    <dl id="followResult" class="per-box52" @click="showPopup()" style="padding:0;height:auto;">
                        <dt class="c6 f3-1" style="font-weight: bold;">跟进结果</dt>
                        <dd class="t-right c6 f3 c2 arrow"><input type="text" class="ca-input t-right" placeholder="请选择" disabled :value="followList.funFollowUpResultName"></dd>
                    </dl>
                    <div class="border-t" v-show="isGiveUp">
                        <div class="f2 c5 pad6-2">放弃类</div>
                        <section class="type-box">
                            <div id="fType" class="swiper-container">
                                <div class="swiper-wrapper f-flex">
                                    <div class="swiper-slide" style="width: auto;display: inline-block;"  v-for="(item, index) in followGiveUpList" :key="index"  :class="followList.giveUpDetail == item.value ? 'active' : ''">
                                        <label>
                                            <b class="b1" v-show="item.value == '0'"></b>
                                            <b class="b2" v-show="item.value == '1'"></b>
                                            <b class="b3" v-show="item.value == '2'"></b>
                                            <b class="b4" v-show="item.value == '3'"></b>
                                            <b class="b5" v-show="item.value == '4'"></b>
                                            <input type="radio" name="a" class="hide" v-model="followList.giveUpDetail"  :value="item.value"  @change="getGiveRadioVal"><span>{{item.name}}</span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </section>
                    </div>
                </section>

                <section class=" bg7 mar3-2 pad1-3">
                    <h3 class="c6 f3-1 ek-com-tit border-b bold">回访计划</h3>
                    <dl id="followResult" class="per-box52  border-b" @click="showVisitList()" style="padding:0;height:auto;">
                        <dt class="c6 f3-1">回访类型</dt>
                        <dd class="t-right c6 f3 c2 arrow"><input type="text" class="ca-input t-right" placeholder="请选择" disabled :value="followList.callbackTypeName"></dd>
                    </dl>
                    <dl class="per-box52 no-p border-b" @click="showCallbackTime('callBack')">
                        <dt class="c6 f3-1">回访时间</dt>
                        <dd class="t-right c6 f3 c2 arrow"><input type="text" class="ca-input t-right" placeholder="请选择" disabled :value="followList.callbackTime"></dd>
                    </dl>
                    <div class="pad6-2">
                        <textarea class="ca-input95 f3" placeholder="请输入回访内容" v-model="followList.callbackContent"></textarea>
                    </div>
                </section>
            </div>
            <div class="posi5 pad5-8 bg7" @click="saveRecord()">
                <button type="button" class="hx-bt3 t-center">创建</button>
            </div>
        </div>

        <!-- 弹出层 -->
        <van-popup
            v-model="showFollowResult"
            position="bottom"
            :style="{height: '27%'}"
            get-container = "followResult"
            safe-area-inset-bottom
            >
            <div v-for="(item, index) in followResultList" :key="index" @click="chooseResult(item)" class="el-loading-text border-b pad">{{item.name}}</div>
        </van-popup>

        <van-popup
            v-model="showVisit"
            position="bottom"
            :style="{height: '14%'}"
            get-container = "followResult"
            safe-area-inset-bottom
            >
            <div v-for="(item, index) in followVisitList" :key="index" @click="chooseVisitList(item)" class="el-loading-text border-b pad">{{item.name}}</div>
        </van-popup>

        <van-popup
            v-model="callbackTimeShow"
            position="bottom"
            :style="{height:'50%'}"
        >
            <van-datetime-picker
                @confirm="confirm"
                @cancel="callbackTimeShow = false"
                v-model="currentDate"
                type="date"
                title="选择年月日"
                :formatter="formatter"
            />
        </van-popup>
        <!-- end -->

    </div>
</template>
<script>
    import Vue from 'vue'
    import { mapGetters } from 'vuex'
    import * as tool from '@/common/Tool'
    import { api_sell } from '@/api/index'
    import DataSource from '@/common/DataSource'
    import { Popup, DatetimePicker, Picker } from 'vant'
    // import Rules from './Rules'
    // import Works from './Works'
    // import Visitor from './Visitor'
    // import Performance from './Performance'

    Vue.use(Popup)
    Vue.use(DatetimePicker)
    Vue.use(Picker)

    export default {
        name: "FollowRecord",
        data () {
            return {
                followUpId: this.$route.params.q,
                fromType: this.$route.params.r,//add新增，edit编辑
                followContentList: [],//跟进内容
                followResultList: [],//跟进结果
                followGiveUpList: [],//放弃跟进类型
                followVisitList: [],//回访类型
                showFollowResult: false,
                followList: [],
                isGiveUp: false,
                showVisit: false,
                callbackTimeShow: false,
                currentDate: new Date(),
                timeType: "",
                followContents: [],
            }
        },
        computed: {
            ...mapGetters(['user']),
        },
        components: {
            // 'rules': Rules,
            // 'works': Works,
            // 'visitor': Visitor,
            // 'performance': Performance
        },
        created () {
            this.followContent();//跟进内容
            // this.queryCustomerTags();//已选标签
            this.followResult();//跟进结果
            this.followGiveUp();//放弃跟进类型
            this.followVisitType();//回访类型
        },
        methods: {

            showPopup () {
                this.showFollowResult = true;
            },
            showVisitList () {
                this.showVisit = true;
            },
            showCallbackTime (type) {
                this.callbackTimeShow = true;
                this.timeType = type;
            },

            chooseResult (item) {
                this.followList.funFollowUpResult = item.value;
                this.followList.funFollowUpResultName = item.name;
                this.showFollowResult = false;
                if (item.value == '3') {
                    this.isGiveUp = true;
                } else {
                    this.isGiveUp = false;
                }
            },
            chooseVisitList (item) {
                this.followList.callbackType = item.value;
                this.followList.callbackTypeName = item.name;
                this.showVisit = false;
            },

            confirm(val) {
                let year = val.getFullYear()
                let month = val.getMonth() + 1
                let day = val.getDate()
                if (month >= 1 && month <= 9) { month = `0${month}` }
                if (day >= 1 && day <= 9) { day = `0${day}` }
                let value = `${year}-${month}-${day}`
                if (this.timeType == 'follow') {
                    this.followList.followTime = value;
                } else if (this.timeType == 'callBack') {
                    this.followList.callbackTime = value;
                }
                this.callbackTimeShow = false;
            },
            formatter(type, value) {
                if (type === 'year') {
                    return `${value}年`
                } else if (type === 'month') {
                    return `${value}月`
                } else if (type === 'day') {
                    return `${value}日`
                }
                return value
            },

            getGiveRadioVal () {},




            queryCustomerTags () {
                const _data = {
                    saasId: tool.app.saasId,
                    // clientNewidId: this.clientNewId,//这个id还没带过来
                    clientNewidId: "fb27daf7aee911ea967f6c92bf603fec"
                }
                api_sell.queryCustomerTags(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        console.log(data)
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            followContent () {
                const _data = {type: 'funzg_follow_content/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.followContentList = data.params.dicts;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },
            
            followResult () {
                const _data = {type: 'funzg_follow_up_result/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.followResultList = data.params.dicts;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            followGiveUp () {
                const _data = {type: 'funzg_give_up_detail/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.followGiveUpList = data.params.dicts;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            followVisitType () {
                const _data = {type: 'fun_visit_type/' + tool.app.platformCode + '/' + tool.app.saasId}
                api_sell.sysDict(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        this.followVisitList = data.params.dicts;
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            editLabel () {
                this.$router.push({ path: '/editLabel/' + this.clientId + '/' + this.clientNewId});
                // this.$router.push({ path: '/editLabeleditLabel/062daa1e4d8a11e9967f6c92bf603f23/1001'});
            },

            saveRecord () {
                console.log('111',this.followList)
                console.log('跟进内容  多选',this.followContents)
                const _data = {
                    saasId: tool.app.saasId,
                    agentUserId: "0003660579e611e9a021246e965b5bf8",//代理人id
                    clientNewidId: "fb27daf7aee911ea967f6c92bf603fec",//客户id
                    followTime: this.followList.followTime,
                    followContents: this.followContents,
                    followContentDetail: this.followList.followContentDetail,
                    tagCodes: [
                        "demandHigh",
                        "manageMoney"
                    ],//标签
                    customTags: ["随便的标签"],//自定义标签
                    funFollowUpResult: this.followList.funFollowUpResult,
                    giveUpDetail: this.followList.giveUpDetail,
                    callbackType: this.followList.callbackTypeName,
                    callbackTime: this.followList.callbackTime,
                    callbackContent: this.followList.callbackContent
                }
                api_sell.addFollowUp(_data).then(data => {
                    if (data.status == tool.rtCode.status) {
                        console.log('240',data)
                    } else {
                        tool.toastMessage(data.message, 'error');
                    }
                })
            },

            goBack () {
                this.$router.push({ path: '/customerDetail/062daa1e4d8a11e9967f6c92bf603f23/1001' });
            },

            
            
            
        }
    }
</script>
<style scoped>
  
</style>