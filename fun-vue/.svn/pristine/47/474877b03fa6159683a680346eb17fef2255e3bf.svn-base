<template>

  <body class="bg3">
    <div class="fun-top-panel bg7 border-b1">
      <span
        class="mess-back"
        @click="goBack"
      >
        <div class="cont"></div>
      </span>
      <span class="title c33 f4 dblock2 t-center ">我的档案</span>
    </div>
    <div class=" mar1 clearfix record">
      <section class="new-nav-box mar3 clearfix">
        <ul>
          <li
            class="bg7 f3 border-b1 simple2"
            style="overflow:hidden"
          >头像
            <label
              for="uploadid1"
              class="f-right"
            >
              <div class="avator-box f-left">
                <img :src="headImg" />
              </div>
            </label>
            <upload-file
              class="f-right"
              ref="upLoadFile"
              style="display:none;"
              :upload-id="uploadid1"
              @iptFile="afterRead"
            />
          </li>
          <li class="bg7 f3 c6 border-b1 none no-p">姓名<span class="f-right ">{{name}}</span></li>
          <li class="bg7 f3 c6 border-b1 none no-p">工号<span class="f-right ">{{agentCode}}</span></li>
          <li class="bg7 f3 c6 border-b1 none no-p">职级<span class="f-right ">{{agentGrade}}</span></li>
          <li class="bg7 f3 c6 border-b1 none no-p">公司<span class="f-right ">{{deptName2}}</span></li>
        </ul>
      </section>
    </div>
  </body>
</template>

<script>
import { mapGetters } from 'vuex'
import { api_my } from '@/api/index'
import * as tool from '@/common/Tool'
import { UploadFile } from '@/components/index'
import Vue from 'vue';
import { Uploader } from 'vant';
import DataSource from '@/common/DataSource'


Vue.use(Uploader);

export default {
  name: 'myrecord',
  computed: {
    ...mapGetters(['user'])
  },
  components: {
    'upload-file': UploadFile,
  },
  mounted() {
    this.myProfileDetail();
  },
  data() {
    return {
      agentCode: "",
      deptName2: "",
      name: "",
      agentGrade: '',
      headImg: '',
      head: '',
      uploadid1: 'uploadid1',
      url:''
    }
  },
  methods: {
    goBack() {
      this.$router.go(-1)
    },
    myProfileDetail() {
      let data = DataSource.get('record',1);
       if (data.status == tool.rtCode.status) {
          this.agentCode = data.agentCode
          this.deptName2 = data.deptName2
          this.name = data.name
          this.agentGrade = data.agentGrade
          this.headImg = data.head
        } else {
          tool.toastMessage(res.message, 'error')
        }
      // let _data = {
      //   'userId': this.user.userInfo.userId,
      //   'saasId': this.user.userInfo.saasId
      // }
      // api_my.myProfileDetail(_data).then(res => {
      // })
    },
    updateMyProfile() {
      let _data = {
        'userId': this.user.userInfo.userId,
        'saasId': this.user.userInfo.saasId,
        'head': this.headImg
      }
       api_my.updateMyProfile(_data).then(res => {
        tool.toastMessage(res.message, 'error')
      })
    },
    afterRead(params) {
      this.headImg = params.url
      this.url = params.url
    },

  },
  watch: {
    url(){
      this.updateMyProfile();
    }
  }
}
</script>

<style scoped>
</style>